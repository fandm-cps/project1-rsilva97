        -:    0:Source:/usr/include/c++/7/bits/stl_vector.h
        -:    0:Graph:ReallyLongInt_TEST.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:// Vector implementation -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2001-2017 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/*
        -:   26: *
        -:   27: * Copyright (c) 1994
        -:   28: * Hewlett-Packard Company
        -:   29: *
        -:   30: * Permission to use, copy, modify, distribute and sell this software
        -:   31: * and its documentation for any purpose is hereby granted without fee,
        -:   32: * provided that the above copyright notice appear in all copies and
        -:   33: * that both that copyright notice and this permission notice appear
        -:   34: * in supporting documentation.  Hewlett-Packard Company makes no
        -:   35: * representations about the suitability of this software for any
        -:   36: * purpose.  It is provided "as is" without express or implied warranty.
        -:   37: *
        -:   38: *
        -:   39: * Copyright (c) 1996
        -:   40: * Silicon Graphics Computer Systems, Inc.
        -:   41: *
        -:   42: * Permission to use, copy, modify, distribute and sell this software
        -:   43: * and its documentation for any purpose is hereby granted without fee,
        -:   44: * provided that the above copyright notice appear in all copies and
        -:   45: * that both that copyright notice and this permission notice appear
        -:   46: * in supporting documentation.  Silicon Graphics makes no
        -:   47: * representations about the suitability of this  software for any
        -:   48: * purpose.  It is provided "as is" without express or implied warranty.
        -:   49: */
        -:   50:
        -:   51:/** @file bits/stl_vector.h
        -:   52: *  This is an internal header file, included by other library headers.
        -:   53: *  Do not attempt to use it directly. @headername{vector}
        -:   54: */
        -:   55:
        -:   56:#ifndef _STL_VECTOR_H
        -:   57:#define _STL_VECTOR_H 1
        -:   58:
        -:   59:#include <bits/stl_iterator_base_funcs.h>
        -:   60:#include <bits/functexcept.h>
        -:   61:#include <bits/concept_check.h>
        -:   62:#if __cplusplus >= 201103L
        -:   63:#include <initializer_list>
        -:   64:#endif
        -:   65:
        -:   66:#include <debug/assertions.h>
        -:   67:
        -:   68:namespace std _GLIBCXX_VISIBILITY(default)
        -:   69:{
        -:   70:_GLIBCXX_BEGIN_NAMESPACE_CONTAINER
        -:   71:
        -:   72:  /// See bits/stl_deque.h's _Deque_base for an explanation.
        -:   73:  template<typename _Tp, typename _Alloc>
        -:   74:    struct _Vector_base
        -:   75:    {
        -:   76:      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
        -:   77:	rebind<_Tp>::other _Tp_alloc_type;
        -:   78:      typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
        -:   79:       	pointer;
        -:   80:
function _ZNSt12_Vector_baseINSt8__detail6_StateIcEESaIS2_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIccESaIS1_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESaISH_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt15__exception_ptr13exception_ptrESaIS1_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS2_13JunitReporterEE11SectionNodeEESaIS7_EESaIS9_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch14AssertionStatsESaIS1_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch13SummaryColumnESaIS1_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch12_GLOBAL__N_110ColumnInfoESaIS2_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11SectionInfoESaIS1_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPKN5Catch8TestCaseESaIS3_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPN5Catch10ISingletonESaIS2_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec11FilterMatchESaIS2_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch14SectionEndInfoESaIS1_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch13ScopedMessageESaIS1_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestCaseESaIS1_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11MessageInfoESaIS1_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch9StringRefESaIS1_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseImSaImEE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec6FilterESaIS2_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3ArgESaIS3_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3OptESaIS3_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail11HelpColumnsESaIS3_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail5TokenESaIS3_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6ColumnESaIS3_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev called 0 returned 0% blocks executed 0%
    #####:   81:      struct _Vector_impl
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
call   42 never executed
call   43 never executed
        -:   82:      : public _Tp_alloc_type
        -:   83:      {
        -:   84:	pointer _M_start;
        -:   85:	pointer _M_finish;
        -:   86:	pointer _M_end_of_storage;
        -:   87:
function _ZNSt12_Vector_baseINSt8__detail6_StateIcEESaIS2_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIccESaIS1_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESaISH_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt15__exception_ptr13exception_ptrESaIS1_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS2_13JunitReporterEE11SectionNodeEESaIS7_EESaIS9_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch14AssertionStatsESaIS1_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11SectionInfoESaIS1_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch13SummaryColumnESaIS1_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPKN5Catch8TestCaseESaIS3_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestCaseESaIS1_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch9StringRefESaIS1_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPN5Catch10ISingletonESaIS2_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3ArgESaIS3_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3OptESaIS3_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec11FilterMatchESaIS2_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch14SectionEndInfoESaIS1_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch13ScopedMessageESaIS1_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11MessageInfoESaIS1_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseImSaImEE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec6FilterESaIS2_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail11HelpColumnsESaIS3_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail5TokenESaIS3_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6ColumnESaIS3_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev called 0 returned 0% blocks executed 0%
    #####:   88:	_Vector_impl()
    #####:   89:	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
    #####:   90:	{ }
        -:   91:
function _ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE12_Vector_implC2ERKS8_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE12_Vector_implC2ERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIccESaIS1_EE12_Vector_implC2ERKS2_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2ERKS0_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EE12_Vector_implC2ERKSD_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE12_Vector_implC2ERKSD_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE12_Vector_implC2ERKS5_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3ArgESaIS3_EE12_Vector_implC2ERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3OptESaIS3_EE12_Vector_implC2ERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch12_GLOBAL__N_110ColumnInfoESaIS2_EE12_Vector_implC2ERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPKN5Catch8TestCaseESaIS3_EE12_Vector_implC2ERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec11FilterMatchESaIS2_EE12_Vector_implC2ERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestCaseESaIS1_EE12_Vector_implC2ERKS2_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec6FilterESaIS2_EE12_Vector_implC2ERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11MessageInfoESaIS1_EE12_Vector_implC2ERKS2_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail11HelpColumnsESaIS3_EE12_Vector_implC2ERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail5TokenESaIS3_EE12_Vector_implC2ERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2ERKS6_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6ColumnESaIS3_EE12_Vector_implC2ERKS4_ called 0 returned 0% blocks executed 0%
    #####:   92:	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    #####:   93:	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
    #####:   94:	{ }
        -:   95:
        -:   96:#if __cplusplus >= 201103L
function _ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE12_Vector_implC2EOSD_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE12_Vector_implC2EOS8_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE12_Vector_implC2EOS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIccESaIS1_EE12_Vector_implC2EOS2_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2EOS0_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE12_Vector_implC2EOS5_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESaISH_EE12_Vector_implC2EOSI_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch12_GLOBAL__N_110ColumnInfoESaIS2_EE12_Vector_implC2EOS3_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2EOS6_ called 0 returned 0% blocks executed 0%
    #####:   97:	_Vector_impl(_Tp_alloc_type&& __a) noexcept
    #####:   98:	: _Tp_alloc_type(std::move(__a)),
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
    #####:   99:	  _M_start(), _M_finish(), _M_end_of_storage()
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
    #####:  100:	{ }
        -:  101:#endif
        -:  102:
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EE12_Vector_impl12_M_swap_dataERSE_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE12_Vector_impl12_M_swap_dataERSA_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE12_Vector_impl12_M_swap_dataERS6_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIccESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIcSaIcEE12_Vector_impl12_M_swap_dataERS2_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE12_Vector_impl12_M_swap_dataERSF_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESaISH_EE12_Vector_impl12_M_swap_dataERSK_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE12_Vector_impl12_M_swap_dataERSC_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch12_GLOBAL__N_110ColumnInfoESaIS2_EE12_Vector_impl12_M_swap_dataERS5_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE12_Vector_impl12_M_swap_dataERS7_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPKN5Catch8TestCaseESaIS3_EE12_Vector_impl12_M_swap_dataERS6_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec11FilterMatchESaIS2_EE12_Vector_impl12_M_swap_dataERS5_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestCaseESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_impl12_M_swap_dataERS8_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec6FilterESaIS2_EE12_Vector_impl12_M_swap_dataERS5_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3ArgESaIS3_EE12_Vector_impl12_M_swap_dataERS6_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3OptESaIS3_EE12_Vector_impl12_M_swap_dataERS6_ called 0 returned 0% blocks executed 0%
    #####:  103:	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
        -:  104:	{
    #####:  105:	  std::swap(_M_start, __x._M_start);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
    #####:  106:	  std::swap(_M_finish, __x._M_finish);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
    #####:  107:	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
    #####:  108:	}
        -:  109:      };
        -:  110:
        -:  111:    public:
        -:  112:      typedef _Alloc allocator_type;
        -:  113:
        -:  114:      _Tp_alloc_type&
function _ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIccESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt8__detail6_StateIcEESaIS2_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESaISH_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt15__exception_ptr13exception_ptrESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS2_13JunitReporterEE11SectionNodeEESaIS7_EESaIS9_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch14AssertionStatsESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch13SummaryColumnESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch12_GLOBAL__N_110ColumnInfoESaIS2_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11SectionInfoESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPKN5Catch8TestCaseESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPN5Catch10ISingletonESaIS2_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec11FilterMatchESaIS2_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch14SectionEndInfoESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch13ScopedMessageESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestCaseESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11MessageInfoESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch9StringRefESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec6FilterESaIS2_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3ArgESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3OptESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail11HelpColumnsESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail5TokenESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6ColumnESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
    #####:  115:      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    #####:  116:      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
        -:  117:
        -:  118:      const _Tp_alloc_type&
function _ZNKSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseISt4pairIccESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESaISH_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseINSt8__detail6_StateIcEESaIS2_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch14AssertionStatsESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch13SummaryColumnESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch11SectionInfoESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch9StringRefESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch5clara6detail11HelpColumnsESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseINSt15__exception_ptr13exception_ptrESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIPN5Catch10ISingletonESaIS2_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch13ScopedMessageESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch14SectionEndInfoESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch8TestSpec11FilterMatchESaIS2_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIPKN5Catch8TestCaseESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch8TestCaseESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch5clara6detail3ArgESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch5clara6detail3OptESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch8TestSpec6FilterESaIS2_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch11MessageInfoESaIS1_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch5clara6detail5TokenESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch5clara8TextFlow6ColumnESaIS3_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE19_M_get_Tp_allocatorEv called 0 returned 0% blocks executed 0%
    #####:  119:      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    #####:  120:      { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
        -:  121:
        -:  122:      allocator_type
function _ZNKSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE13get_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIPKN5Catch8TestCaseESaIS3_EE13get_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE13get_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch8TestCaseESaIS1_EE13get_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13get_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch5clara6detail3ArgESaIS3_EE13get_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch5clara6detail3OptESaIS3_EE13get_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch8TestSpec11FilterMatchESaIS2_EE13get_allocatorEv called 0 returned 0% blocks executed 0%
function _ZNKSt12_Vector_baseIN5Catch8TestSpec6FilterESaIS2_EE13get_allocatorEv called 0 returned 0% blocks executed 0%
    #####:  123:      get_allocator() const _GLIBCXX_NOEXCEPT
    #####:  124:      { return allocator_type(_M_get_Tp_allocator()); }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
        -:  125:
function _ZNSt12_Vector_baseINSt8__detail6_StateIcEESaIS2_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIccESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIcSaIcEEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESaISH_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt15__exception_ptr13exception_ptrESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS2_13JunitReporterEE11SectionNodeEESaIS7_EESaIS9_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch14AssertionStatsESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11SectionInfoESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch13SummaryColumnESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPKN5Catch8TestCaseESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestCaseESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch9StringRefESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPN5Catch10ISingletonESaIS2_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3ArgESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3OptESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec11FilterMatchESaIS2_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPN5Catch16TestCaseTracking8ITrackerESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch14SectionEndInfoESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch13ScopedMessageESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11MessageInfoESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseImSaImEEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec6FilterESaIS2_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail11HelpColumnsESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail5TokenESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6ColumnESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev called 0 returned 0% blocks executed 0%
    #####:  126:      _Vector_base()
    #####:  127:      : _M_impl() { }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
        -:  128:
function _ZNSt12_Vector_baseIcSaIcEEC2ERKS0_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPKN5Catch8TestCaseESaIS3_EEC2ERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2ERKSD_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EEC2ERKS5_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestCaseESaIS1_EEC2ERKS2_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3ArgESaIS3_EEC2ERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3OptESaIS3_EEC2ERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec11FilterMatchESaIS2_EEC2ERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec6FilterESaIS2_EEC2ERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch12_GLOBAL__N_110ColumnInfoESaIS2_EEC2ERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail11HelpColumnsESaIS3_EEC2ERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS6_ called 0 returned 0% blocks executed 0%
    #####:  129:      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    #####:  130:      : _M_impl(__a) { }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
        -:  131:
        -:  132:      _Vector_base(size_t __n)
        -:  133:      : _M_impl()
        -:  134:      { _M_create_storage(__n); }
        -:  135:
function _ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2EmRKS8_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EEC2EmRKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIccESaIS1_EEC2EmRKS2_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIcSaIcEEC2EmRKS0_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2EmRKSD_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EEC2EmRKSD_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EEC2EmRKS5_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3ArgESaIS3_EEC2EmRKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3OptESaIS3_EEC2EmRKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPKN5Catch8TestCaseESaIS3_EEC2EmRKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec11FilterMatchESaIS2_EEC2EmRKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestCaseESaIS1_EEC2EmRKS2_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec6FilterESaIS2_EEC2EmRKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11MessageInfoESaIS1_EEC2EmRKS2_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2EmRKS6_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail5TokenESaIS3_EEC2EmRKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6ColumnESaIS3_EEC2EmRKS4_ called 0 returned 0% blocks executed 0%
    #####:  136:      _Vector_base(size_t __n, const allocator_type& __a)
    #####:  137:      : _M_impl(__a)
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
    #####:  138:      { _M_create_storage(__n); }
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
call   21 never executed
branch 22 never executed
branch 23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
call   27 never executed
branch 28 never executed
branch 29 never executed
call   30 never executed
branch 31 never executed
branch 32 never executed
call   33 never executed
branch 34 never executed
branch 35 never executed
call   36 never executed
branch 37 never executed
branch 38 never executed
call   39 never executed
branch 40 never executed
branch 41 never executed
call   42 never executed
branch 43 never executed
branch 44 never executed
call   45 never executed
branch 46 never executed
branch 47 never executed
call   48 never executed
branch 49 never executed
branch 50 never executed
        -:  139:
        -:  140:#if __cplusplus >= 201103L
        -:  141:      _Vector_base(_Tp_alloc_type&& __a) noexcept
        -:  142:      : _M_impl(std::move(__a)) { }
        -:  143:
function _ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2EOSE_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2EOS9_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EEC2EOS5_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIccESaIS1_EEC2EOS3_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIcSaIcEEC2EOS1_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EEC2EOS6_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESaISH_EEC2EOSJ_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch12_GLOBAL__N_110ColumnInfoESaIS2_EEC2EOS4_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2EOS7_ called 0 returned 0% blocks executed 0%
    #####:  144:      _Vector_base(_Vector_base&& __x) noexcept
    #####:  145:      : _M_impl(std::move(__x._M_get_Tp_allocator()))
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
    #####:  146:      { this->_M_impl._M_swap_data(__x._M_impl); }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
        -:  147:
        -:  148:      _Vector_base(_Vector_base&& __x, const allocator_type& __a)
        -:  149:      : _M_impl(__a)
        -:  150:      {
        -:  151:	if (__x.get_allocator() == __a)
        -:  152:	  this->_M_impl._M_swap_data(__x._M_impl);
        -:  153:	else
        -:  154:	  {
        -:  155:	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
        -:  156:	    _M_create_storage(__n);
        -:  157:	  }
        -:  158:      }
        -:  159:#endif
        -:  160:
function _ZNSt12_Vector_baseINSt8__detail6_StateIcEESaIS2_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIccESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIcSaIcEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESaISH_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt15__exception_ptr13exception_ptrESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS2_13JunitReporterEE11SectionNodeEESaIS7_EESaIS9_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch14AssertionStatsESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch13SummaryColumnESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch12_GLOBAL__N_110ColumnInfoESaIS2_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11SectionInfoESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPKN5Catch8TestCaseESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPN5Catch10ISingletonESaIS2_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec11FilterMatchESaIS2_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPN5Catch16TestCaseTracking8ITrackerESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch14SectionEndInfoESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch13ScopedMessageESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestCaseESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11MessageInfoESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch9StringRefESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseImSaImEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec6FilterESaIS2_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3ArgESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3OptESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail11HelpColumnsESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail5TokenESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6ColumnESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev called 0 returned 0% blocks executed 0%
    #####:  161:      ~_Vector_base() _GLIBCXX_NOEXCEPT
    #####:  162:      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
call   42 never executed
call   43 never executed
    #####:  163:		      - this->_M_impl._M_start); }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
call   42 never executed
call   43 never executed
        -:  164:
        -:  165:    public:
        -:  166:      _Vector_impl _M_impl;
        -:  167:
        -:  168:      pointer
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIccESaIS1_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESaISH_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt8__detail6_StateIcEESaIS2_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch14AssertionStatsESaIS1_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch13SummaryColumnESaIS1_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11SectionInfoESaIS1_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec11FilterMatchESaIS2_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch9StringRefESaIS1_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch12_GLOBAL__N_110ColumnInfoESaIS2_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec6FilterESaIS2_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPKN5Catch8TestCaseESaIS3_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestCaseESaIS1_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseImSaImEE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt15__exception_ptr13exception_ptrESaIS1_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPN5Catch10ISingletonESaIS2_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch13ScopedMessageESaIS1_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch14SectionEndInfoESaIS1_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11MessageInfoESaIS1_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3OptESaIS3_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3ArgESaIS3_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail11HelpColumnsESaIS3_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail5TokenESaIS3_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6ColumnESaIS3_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm called 0 returned 0% blocks executed 0%
    #####:  169:      _M_allocate(size_t __n)
        -:  170:      {
        -:  171:	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
    #####:  172:	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
branch 18 never executed
branch 19 never executed
call   20 never executed
branch 21 never executed
branch 22 never executed
call   23 never executed
branch 24 never executed
branch 25 never executed
call   26 never executed
branch 27 never executed
branch 28 never executed
call   29 never executed
branch 30 never executed
branch 31 never executed
call   32 never executed
branch 33 never executed
branch 34 never executed
call   35 never executed
branch 36 never executed
branch 37 never executed
call   38 never executed
branch 39 never executed
branch 40 never executed
call   41 never executed
branch 42 never executed
branch 43 never executed
call   44 never executed
branch 45 never executed
branch 46 never executed
call   47 never executed
branch 48 never executed
branch 49 never executed
call   50 never executed
branch 51 never executed
branch 52 never executed
call   53 never executed
branch 54 never executed
branch 55 never executed
call   56 never executed
branch 57 never executed
branch 58 never executed
call   59 never executed
branch 60 never executed
branch 61 never executed
call   62 never executed
branch 63 never executed
branch 64 never executed
call   65 never executed
branch 66 never executed
branch 67 never executed
call   68 never executed
branch 69 never executed
branch 70 never executed
call   71 never executed
branch 72 never executed
branch 73 never executed
call   74 never executed
branch 75 never executed
branch 76 never executed
call   77 never executed
branch 78 never executed
branch 79 never executed
call   80 never executed
branch 81 never executed
branch 82 never executed
call   83 never executed
branch 84 never executed
branch 85 never executed
call   86 never executed
branch 87 never executed
branch 88 never executed
call   89 never executed
branch 90 never executed
branch 91 never executed
call   92 never executed
branch 93 never executed
branch 94 never executed
call   95 never executed
branch 96 never executed
branch 97 never executed
call   98 never executed
branch 99 never executed
branch 100 never executed
call   101 never executed
branch 102 never executed
branch 103 never executed
call   104 never executed
branch 105 never executed
branch 106 never executed
call   107 never executed
branch 108 never executed
branch 109 never executed
call   110 never executed
branch 111 never executed
branch 112 never executed
call   113 never executed
branch 114 never executed
branch 115 never executed
call   116 never executed
branch 117 never executed
branch 118 never executed
call   119 never executed
branch 120 never executed
branch 121 never executed
call   122 never executed
branch 123 never executed
branch 124 never executed
call   125 never executed
branch 126 never executed
branch 127 never executed
call   128 never executed
        -:  173:      }
        -:  174:
        -:  175:      void
function _ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE13_M_deallocateEPS7_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE13_M_deallocateEPS3_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIccESaIS1_EE13_M_deallocateEPS1_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt8__detail6_StateIcEESaIS2_EE13_M_deallocateEPS2_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESaISH_EE13_M_deallocateEPSH_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EE13_M_deallocateEPSC_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE13_M_deallocateEPSC_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EE13_M_deallocateEPS9_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EE13_M_deallocateEPS6_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE13_M_deallocateEPS6_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EE13_M_deallocateEPSD_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EE13_M_deallocateEPSB_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE13_M_deallocateEPS9_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS2_13JunitReporterEE11SectionNodeEESaIS7_EESaIS9_EE13_M_deallocateEPS9_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch14AssertionStatsESaIS1_EE13_M_deallocateEPS1_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch13SummaryColumnESaIS1_EE13_M_deallocateEPS1_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch12_GLOBAL__N_110ColumnInfoESaIS2_EE13_M_deallocateEPS2_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11SectionInfoESaIS1_EE13_M_deallocateEPS1_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPKN5Catch8TestCaseESaIS3_EE13_M_deallocateEPS3_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt15__exception_ptr13exception_ptrESaIS1_EE13_M_deallocateEPS1_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPN5Catch10ISingletonESaIS2_EE13_M_deallocateEPS2_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec11FilterMatchESaIS2_EE13_M_deallocateEPS2_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE13_M_deallocateEPS3_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch14SectionEndInfoESaIS1_EE13_M_deallocateEPS1_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch13ScopedMessageESaIS1_EE13_M_deallocateEPS1_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE13_M_deallocateEPS4_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EE13_M_deallocateEPS3_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11MessageInfoESaIS1_EE13_M_deallocateEPS1_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EE13_M_deallocateEPS6_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch9StringRefESaIS1_EE13_M_deallocateEPS1_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE13_M_deallocateEPS4_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseImSaImEE13_M_deallocateEPmm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec6FilterESaIS2_EE13_M_deallocateEPS2_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail11HelpColumnsESaIS3_EE13_M_deallocateEPS3_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail5TokenESaIS3_EE13_M_deallocateEPS3_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6ColumnESaIS3_EE13_M_deallocateEPS3_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestCaseESaIS1_EE13_M_deallocateEPS1_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3ArgESaIS3_EE13_M_deallocateEPS3_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3OptESaIS3_EE13_M_deallocateEPS3_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deallocateEPS7_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE13_M_deallocateEPS4_m called 0 returned 0% blocks executed 0%
    #####:  176:      _M_deallocate(pointer __p, size_t __n)
        -:  177:      {
        -:  178:	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
    #####:  179:	if (__p)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
branch 18 never executed
branch 19 never executed
branch 20 never executed
branch 21 never executed
branch 22 never executed
branch 23 never executed
branch 24 never executed
branch 25 never executed
branch 26 never executed
branch 27 never executed
branch 28 never executed
branch 29 never executed
branch 30 never executed
branch 31 never executed
branch 32 never executed
branch 33 never executed
branch 34 never executed
branch 35 never executed
branch 36 never executed
branch 37 never executed
branch 38 never executed
branch 39 never executed
branch 40 never executed
branch 41 never executed
branch 42 never executed
branch 43 never executed
branch 44 never executed
branch 45 never executed
branch 46 never executed
branch 47 never executed
branch 48 never executed
branch 49 never executed
branch 50 never executed
branch 51 never executed
branch 52 never executed
branch 53 never executed
branch 54 never executed
branch 55 never executed
branch 56 never executed
branch 57 never executed
branch 58 never executed
branch 59 never executed
branch 60 never executed
branch 61 never executed
branch 62 never executed
branch 63 never executed
branch 64 never executed
branch 65 never executed
branch 66 never executed
branch 67 never executed
branch 68 never executed
branch 69 never executed
branch 70 never executed
branch 71 never executed
branch 72 never executed
branch 73 never executed
branch 74 never executed
branch 75 never executed
branch 76 never executed
branch 77 never executed
branch 78 never executed
branch 79 never executed
branch 80 never executed
branch 81 never executed
branch 82 never executed
branch 83 never executed
branch 84 never executed
branch 85 never executed
branch 86 never executed
branch 87 never executed
    #####:  180:	  _Tr::deallocate(_M_impl, __p, __n);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
call   42 never executed
call   43 never executed
    #####:  181:      }
        -:  182:
        -:  183:    private:
        -:  184:      void
function _ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIccESaIS1_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3ArgESaIS3_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail3OptESaIS3_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIPKN5Catch8TestCaseESaIS3_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec11FilterMatchESaIS2_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestCaseESaIS1_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch8TestSpec6FilterESaIS2_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch11MessageInfoESaIS1_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara6detail5TokenESaIS3_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
function _ZNSt12_Vector_baseIN5Catch5clara8TextFlow6ColumnESaIS3_EE17_M_create_storageEm called 0 returned 0% blocks executed 0%
    #####:  185:      _M_create_storage(size_t __n)
        -:  186:      {
    #####:  187:	this->_M_impl._M_start = this->_M_allocate(__n);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
    #####:  188:	this->_M_impl._M_finish = this->_M_impl._M_start;
    #####:  189:	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    #####:  190:      }
        -:  191:    };
        -:  192:
        -:  193:
        -:  194:  /**
        -:  195:   *  @brief A standard container which offers fixed time access to
        -:  196:   *  individual elements in any order.
        -:  197:   *
        -:  198:   *  @ingroup sequences
        -:  199:   *
        -:  200:   *  @tparam _Tp  Type of element.
        -:  201:   *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
        -:  202:   *
        -:  203:   *  Meets the requirements of a <a href="tables.html#65">container</a>, a
        -:  204:   *  <a href="tables.html#66">reversible container</a>, and a
        -:  205:   *  <a href="tables.html#67">sequence</a>, including the
        -:  206:   *  <a href="tables.html#68">optional sequence requirements</a> with the
        -:  207:   *  %exception of @c push_front and @c pop_front.
        -:  208:   *
        -:  209:   *  In some terminology a %vector can be described as a dynamic
        -:  210:   *  C-style array, it offers fast and efficient access to individual
        -:  211:   *  elements in any order and saves the user from worrying about
        -:  212:   *  memory and size allocation.  Subscripting ( @c [] ) access is
        -:  213:   *  also provided as with C-style arrays.
        -:  214:  */
        -:  215:  template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
        -:  216:    class vector : protected _Vector_base<_Tp, _Alloc>
        -:  217:    {
        -:  218:#ifdef _GLIBCXX_CONCEPT_CHECKS
        -:  219:      // Concept requirements.
        -:  220:      typedef typename _Alloc::value_type		_Alloc_value_type;
        -:  221:# if __cplusplus < 201103L
        -:  222:      __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
        -:  223:# endif
        -:  224:      __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
        -:  225:#endif
        -:  226:
        -:  227:      typedef _Vector_base<_Tp, _Alloc>			_Base;
        -:  228:      typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
        -:  229:      typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
        -:  230:
        -:  231:    public:
        -:  232:      typedef _Tp					value_type;
        -:  233:      typedef typename _Base::pointer			pointer;
        -:  234:      typedef typename _Alloc_traits::const_pointer	const_pointer;
        -:  235:      typedef typename _Alloc_traits::reference		reference;
        -:  236:      typedef typename _Alloc_traits::const_reference	const_reference;
        -:  237:      typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
        -:  238:      typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
        -:  239:      const_iterator;
        -:  240:      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
        -:  241:      typedef std::reverse_iterator<iterator>		reverse_iterator;
        -:  242:      typedef size_t					size_type;
        -:  243:      typedef ptrdiff_t					difference_type;
        -:  244:      typedef _Alloc					allocator_type;
        -:  245:
        -:  246:    protected:
        -:  247:      using _Base::_M_allocate;
        -:  248:      using _Base::_M_deallocate;
        -:  249:      using _Base::_M_impl;
        -:  250:      using _Base::_M_get_Tp_allocator;
        -:  251:
        -:  252:    public:
        -:  253:      // [23.2.4.1] construct/copy/destroy
        -:  254:      // (assign() and get_allocator() are also listed in this section)
        -:  255:
        -:  256:      /**
        -:  257:       *  @brief  Creates a %vector with no elements.
        -:  258:       */
function _ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIccESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIcSaIcEEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt15__exception_ptr13exception_ptrESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIS_ISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EESaIS8_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch14AssertionStatsESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11SectionInfoESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch13SummaryColumnESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPKN5Catch8TestCaseESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestCaseESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch9StringRefESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPN5Catch10ISingletonESaIS2_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3ArgESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3OptESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec11FilterMatchESaIS2_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPN5Catch16TestCaseTracking8ITrackerESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch14SectionEndInfoESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch13ScopedMessageESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11MessageInfoESaIS1_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorImSaImEEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec6FilterESaIS2_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail11HelpColumnsESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail5TokenESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara8TextFlow6ColumnESaIS3_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EEC2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev called 0 returned 0% blocks executed 0%
    #####:  259:      vector()
        -:  260:#if __cplusplus >= 201103L
        -:  261:      noexcept(is_nothrow_default_constructible<_Alloc>::value)
        -:  262:#endif
    #####:  263:      : _Base() { }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
        -:  264:
        -:  265:      /**
        -:  266:       *  @brief  Creates a %vector with no elements.
        -:  267:       *  @param  __a  An allocator object.
        -:  268:       */
        -:  269:      explicit
function _ZNSt6vectorIPKN5Catch8TestCaseESaIS3_EEC2ERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2ERKSD_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EEC2ERKS5_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestCaseESaIS1_EEC2ERKS2_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS6_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3ArgESaIS3_EEC2ERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3OptESaIS3_EEC2ERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec11FilterMatchESaIS2_EEC2ERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec6FilterESaIS2_EEC2ERKS3_ called 0 returned 0% blocks executed 0%
    #####:  270:      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    #####:  271:      : _Base(__a) { }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
        -:  272:
        -:  273:#if __cplusplus >= 201103L
        -:  274:      /**
        -:  275:       *  @brief  Creates a %vector with default constructed elements.
        -:  276:       *  @param  __n  The number of elements to initially create.
        -:  277:       *  @param  __a  An allocator.
        -:  278:       *
        -:  279:       *  This constructor fills the %vector with @a __n default
        -:  280:       *  constructed elements.
        -:  281:       */
        -:  282:      explicit
function _ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EEC2EmRKSD_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec11FilterMatchESaIS2_EEC2EmRKS3_ called 0 returned 0% blocks executed 0%
    #####:  283:      vector(size_type __n, const allocator_type& __a = allocator_type())
    #####:  284:      : _Base(__n, __a)
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:  285:      { _M_default_initialize(__n); }
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  286:
        -:  287:      /**
        -:  288:       *  @brief  Creates a %vector with copies of an exemplar element.
        -:  289:       *  @param  __n  The number of elements to initially create.
        -:  290:       *  @param  __value  An element to copy.
        -:  291:       *  @param  __a  An allocator.
        -:  292:       *
        -:  293:       *  This constructor fills the %vector with @a __n copies of @a __value.
        -:  294:       */
        -:  295:      vector(size_type __n, const value_type& __value,
        -:  296:	     const allocator_type& __a = allocator_type())
        -:  297:      : _Base(__n, __a)
        -:  298:      { _M_fill_initialize(__n, __value); }
        -:  299:#else
        -:  300:      /**
        -:  301:       *  @brief  Creates a %vector with copies of an exemplar element.
        -:  302:       *  @param  __n  The number of elements to initially create.
        -:  303:       *  @param  __value  An element to copy.
        -:  304:       *  @param  __a  An allocator.
        -:  305:       *
        -:  306:       *  This constructor fills the %vector with @a __n copies of @a __value.
        -:  307:       */
        -:  308:      explicit
        -:  309:      vector(size_type __n, const value_type& __value = value_type(),
        -:  310:	     const allocator_type& __a = allocator_type())
        -:  311:      : _Base(__n, __a)
        -:  312:      { _M_fill_initialize(__n, __value); }
        -:  313:#endif
        -:  314:
        -:  315:      /**
        -:  316:       *  @brief  %Vector copy constructor.
        -:  317:       *  @param  __x  A %vector of identical element and allocator types.
        -:  318:       *
        -:  319:       *  All the elements of @a __x are copied, but any unused capacity in
        -:  320:       *  @a __x  will not be copied
        -:  321:       *  (i.e. capacity() == size() in the new %vector).
        -:  322:       *
        -:  323:       *  The newly-created %vector uses a copy of the allocator object used
        -:  324:       *  by @a __x (unless the allocator traits dictate a different object).
        -:  325:       */
function _ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EEC2ERKS5_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIccESaIS1_EEC2ERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIcSaIcEEC2ERKS1_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2ERKSE_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EEC2ERKS6_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3ArgESaIS3_EEC2ERKS5_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3OptESaIS3_EEC2ERKS5_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPKN5Catch8TestCaseESaIS3_EEC2ERKS5_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestCaseESaIS1_EEC2ERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec6FilterESaIS2_EEC2ERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11MessageInfoESaIS1_EEC2ERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail5TokenESaIS3_EEC2ERKS5_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara8TextFlow6ColumnESaIS3_EEC2ERKS5_ called 0 returned 0% blocks executed 0%
    #####:  326:      vector(const vector& __x)
        -:  327:      : _Base(__x.size(),
    #####:  328:	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
branch 24 never executed
branch 25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
branch 34 never executed
branch 35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
call   42 never executed
call   43 never executed
branch 44 never executed
branch 45 never executed
call   46 never executed
call   47 never executed
call   48 never executed
call   49 never executed
call   50 never executed
call   51 never executed
call   52 never executed
call   53 never executed
branch 54 never executed
branch 55 never executed
call   56 never executed
call   57 never executed
call   58 never executed
call   59 never executed
call   60 never executed
call   61 never executed
call   62 never executed
call   63 never executed
branch 64 never executed
branch 65 never executed
call   66 never executed
call   67 never executed
call   68 never executed
call   69 never executed
call   70 never executed
call   71 never executed
call   72 never executed
call   73 never executed
branch 74 never executed
branch 75 never executed
call   76 never executed
call   77 never executed
call   78 never executed
call   79 never executed
call   80 never executed
call   81 never executed
call   82 never executed
call   83 never executed
branch 84 never executed
branch 85 never executed
call   86 never executed
call   87 never executed
call   88 never executed
call   89 never executed
call   90 never executed
call   91 never executed
call   92 never executed
call   93 never executed
branch 94 never executed
branch 95 never executed
call   96 never executed
call   97 never executed
call   98 never executed
call   99 never executed
call   100 never executed
call   101 never executed
call   102 never executed
call   103 never executed
branch 104 never executed
branch 105 never executed
call   106 never executed
call   107 never executed
call   108 never executed
call   109 never executed
call   110 never executed
call   111 never executed
call   112 never executed
call   113 never executed
branch 114 never executed
branch 115 never executed
call   116 never executed
call   117 never executed
call   118 never executed
call   119 never executed
call   120 never executed
call   121 never executed
call   122 never executed
call   123 never executed
branch 124 never executed
branch 125 never executed
call   126 never executed
call   127 never executed
call   128 never executed
call   129 never executed
call   130 never executed
call   131 never executed
call   132 never executed
call   133 never executed
branch 134 never executed
branch 135 never executed
call   136 never executed
call   137 never executed
call   138 never executed
call   139 never executed
call   140 never executed
call   141 never executed
call   142 never executed
call   143 never executed
branch 144 never executed
branch 145 never executed
call   146 never executed
call   147 never executed
call   148 never executed
call   149 never executed
        -:  329:      {
    #####:  330:	this->_M_impl._M_finish =
    #####:  331:	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
branch 18 never executed
branch 19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
branch 28 never executed
branch 29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
branch 33 never executed
branch 34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
branch 38 never executed
branch 39 never executed
call   40 never executed
call   41 never executed
call   42 never executed
branch 43 never executed
branch 44 never executed
call   45 never executed
call   46 never executed
call   47 never executed
branch 48 never executed
branch 49 never executed
call   50 never executed
call   51 never executed
call   52 never executed
branch 53 never executed
branch 54 never executed
call   55 never executed
call   56 never executed
call   57 never executed
branch 58 never executed
branch 59 never executed
call   60 never executed
call   61 never executed
call   62 never executed
branch 63 never executed
branch 64 never executed
call   65 never executed
call   66 never executed
call   67 never executed
branch 68 never executed
branch 69 never executed
call   70 never executed
call   71 never executed
call   72 never executed
branch 73 never executed
branch 74 never executed
        -:  332:				      this->_M_impl._M_start,
    #####:  333:				      _M_get_Tp_allocator());
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
    #####:  334:      }
        -:  335:
        -:  336:#if __cplusplus >= 201103L
        -:  337:      /**
        -:  338:       *  @brief  %Vector move constructor.
        -:  339:       *  @param  __x  A %vector of identical element and allocator types.
        -:  340:       *
        -:  341:       *  The newly-created %vector contains the exact contents of @a __x.
        -:  342:       *  The contents of @a __x are a valid, but unspecified %vector.
        -:  343:       */
function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2EOSE_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2EOS9_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EEC2EOS5_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIccESaIS1_EEC2EOS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIcSaIcEEC2EOS1_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EEC2EOS6_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EEC2EOSI_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch12_GLOBAL__N_110ColumnInfoESaIS2_EEC2EOS4_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2EOS7_ called 0 returned 0% blocks executed 0%
    #####:  344:      vector(vector&& __x) noexcept
    #####:  345:      : _Base(std::move(__x)) { }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
        -:  346:
        -:  347:      /// Copy constructor with alternative allocator
        -:  348:      vector(const vector& __x, const allocator_type& __a)
        -:  349:      : _Base(__x.size(), __a)
        -:  350:      {
        -:  351:	this->_M_impl._M_finish =
        -:  352:	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
        -:  353:				      this->_M_impl._M_start,
        -:  354:				      _M_get_Tp_allocator());
        -:  355:      }
        -:  356:
        -:  357:      /// Move constructor with alternative allocator
        -:  358:      vector(vector&& __rv, const allocator_type& __m)
        -:  359:      noexcept(_Alloc_traits::_S_always_equal())
        -:  360:      : _Base(std::move(__rv), __m)
        -:  361:      {
        -:  362:	if (__rv.get_allocator() != __m)
        -:  363:	  {
        -:  364:	    this->_M_impl._M_finish =
        -:  365:	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
        -:  366:					  this->_M_impl._M_start,
        -:  367:					  _M_get_Tp_allocator());
        -:  368:	    __rv.clear();
        -:  369:	  }
        -:  370:      }
        -:  371:
        -:  372:      /**
        -:  373:       *  @brief  Builds a %vector from an initializer list.
        -:  374:       *  @param  __l  An initializer_list.
        -:  375:       *  @param  __a  An allocator.
        -:  376:       *
        -:  377:       *  Create a %vector consisting of copies of the elements in the
        -:  378:       *  initializer_list @a __l.
        -:  379:       *
        -:  380:       *  This will call the element type's copy constructor N times
        -:  381:       *  (where N is @a __l.size()) and do no memory reallocation.
        -:  382:       */
function _ZNSt6vectorIN5Catch12_GLOBAL__N_110ColumnInfoESaIS2_EEC2ESt16initializer_listIS2_ERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail11HelpColumnsESaIS3_EEC2ESt16initializer_listIS3_ERKS4_ called 0 returned 0% blocks executed 0%
    #####:  383:      vector(initializer_list<value_type> __l,
        -:  384:	     const allocator_type& __a = allocator_type())
    #####:  385:      : _Base(__a)
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
        -:  386:      {
    #####:  387:	_M_range_initialize(__l.begin(), __l.end(),
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
        -:  388:			    random_access_iterator_tag());
    #####:  389:      }
        -:  390:#endif
        -:  391:
        -:  392:      /**
        -:  393:       *  @brief  Builds a %vector from a range.
        -:  394:       *  @param  __first  An input iterator.
        -:  395:       *  @param  __last  An input iterator.
        -:  396:       *  @param  __a  An allocator.
        -:  397:       *
        -:  398:       *  Create a %vector consisting of copies of the elements from
        -:  399:       *  [first,last).
        -:  400:       *
        -:  401:       *  If the iterators are forward, bidirectional, or
        -:  402:       *  random-access, then this will call the elements' copy
        -:  403:       *  constructor N times (where N is distance(first,last)) and do
        -:  404:       *  no memory reallocation.  But if only input iterators are
        -:  405:       *  used, then this will do at most 2N calls to the copy
        -:  406:       *  constructor, and logN memory reallocations.
        -:  407:       */
        -:  408:#if __cplusplus >= 201103L
        -:  409:      template<typename _InputIterator,
        -:  410:	       typename = std::_RequireInputIter<_InputIterator>>
function _ZNSt6vectorIcSaIcEEC2IPKcvEET_S5_RKS0_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2IPKPKcvEET_SD_RKS6_ called 0 returned 0% blocks executed 0%
    #####:  411:	vector(_InputIterator __first, _InputIterator __last,
        -:  412:	       const allocator_type& __a = allocator_type())
    #####:  413:	: _Base(__a)
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:  414:	{ _M_initialize_dispatch(__first, __last, __false_type()); }
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  415:#else
        -:  416:      template<typename _InputIterator>
        -:  417:	vector(_InputIterator __first, _InputIterator __last,
        -:  418:	       const allocator_type& __a = allocator_type())
        -:  419:	: _Base(__a)
        -:  420:	{
        -:  421:	  // Check whether it's an integral type.  If so, it's not an iterator.
        -:  422:	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
        -:  423:	  _M_initialize_dispatch(__first, __last, _Integral());
        -:  424:	}
        -:  425:#endif
        -:  426:
        -:  427:      /**
        -:  428:       *  The dtor only erases the elements, and note that if the
        -:  429:       *  elements themselves are pointers, the pointed-to memory is
        -:  430:       *  not touched in any way.  Managing the pointer is the user's
        -:  431:       *  responsibility.
        -:  432:       */
function _ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIccESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIcSaIcEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt15__exception_ptr13exception_ptrESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIS_ISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EESaIS8_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch14AssertionStatsESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch13SummaryColumnESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch12_GLOBAL__N_110ColumnInfoESaIS2_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11SectionInfoESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPKN5Catch8TestCaseESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPN5Catch10ISingletonESaIS2_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec11FilterMatchESaIS2_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPN5Catch16TestCaseTracking8ITrackerESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch14SectionEndInfoESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch13ScopedMessageESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestCaseESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11MessageInfoESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch9StringRefESaIS1_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorImSaImEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec6FilterESaIS2_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3ArgESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3OptESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail11HelpColumnsESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail5TokenESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara8TextFlow6ColumnESaIS3_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev called 0 returned 0% blocks executed 0%
    #####:  433:      ~vector() _GLIBCXX_NOEXCEPT
    #####:  434:      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
call   42 never executed
call   43 never executed
    #####:  435:		      _M_get_Tp_allocator()); }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
call   42 never executed
call   43 never executed
call   44 never executed
call   45 never executed
call   46 never executed
call   47 never executed
call   48 never executed
call   49 never executed
call   50 never executed
call   51 never executed
call   52 never executed
call   53 never executed
call   54 never executed
call   55 never executed
call   56 never executed
call   57 never executed
call   58 never executed
call   59 never executed
call   60 never executed
call   61 never executed
call   62 never executed
call   63 never executed
call   64 never executed
call   65 never executed
call   66 never executed
call   67 never executed
call   68 never executed
call   69 never executed
call   70 never executed
call   71 never executed
call   72 never executed
call   73 never executed
call   74 never executed
call   75 never executed
call   76 never executed
call   77 never executed
call   78 never executed
call   79 never executed
call   80 never executed
call   81 never executed
call   82 never executed
call   83 never executed
call   84 never executed
call   85 never executed
call   86 never executed
call   87 never executed
        -:  436:
        -:  437:      /**
        -:  438:       *  @brief  %Vector assignment operator.
        -:  439:       *  @param  __x  A %vector of identical element and allocator types.
        -:  440:       *
        -:  441:       *  All the elements of @a __x are copied, but any unused capacity in
        -:  442:       *  @a __x will not be copied.
        -:  443:       *
        -:  444:       *  Whether the allocator is copied depends on the allocator traits.
        -:  445:       */
        -:  446:      vector&
        -:  447:      operator=(const vector& __x);
        -:  448:
        -:  449:#if __cplusplus >= 201103L
        -:  450:      /**
        -:  451:       *  @brief  %Vector move assignment operator.
        -:  452:       *  @param  __x  A %vector of identical element and allocator types.
        -:  453:       *
        -:  454:       *  The contents of @a __x are moved into this %vector (without copying,
        -:  455:       *  if the allocators permit it).
        -:  456:       *  Afterwards @a __x is a valid, but unspecified %vector.
        -:  457:       *
        -:  458:       *  Whether the allocator is moved depends on the allocator traits.
        -:  459:       */
        -:  460:      vector&
function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSEOSE_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPKN5Catch8TestCaseESaIS3_EEaSEOS5_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EEaSEOS6_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestCaseESaIS1_EEaSEOS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSEOS7_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3ArgESaIS3_EEaSEOS5_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3OptESaIS3_EEaSEOS5_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec11FilterMatchESaIS2_EEaSEOS4_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec6FilterESaIS2_EEaSEOS4_ called 0 returned 0% blocks executed 0%
    #####:  461:      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
        -:  462:      {
    #####:  463:	constexpr bool __move_storage =
        -:  464:	  _Alloc_traits::_S_propagate_on_move_assign()
        -:  465:	  || _Alloc_traits::_S_always_equal();
    #####:  466:	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
    #####:  467:	return *this;
        -:  468:      }
        -:  469:
        -:  470:      /**
        -:  471:       *  @brief  %Vector list assignment operator.
        -:  472:       *  @param  __l  An initializer_list.
        -:  473:       *
        -:  474:       *  This function fills a %vector with copies of the elements in the
        -:  475:       *  initializer list @a __l.
        -:  476:       *
        -:  477:       *  Note that the assignment completely changes the %vector and
        -:  478:       *  that the resulting %vector's size is the same as the number
        -:  479:       *  of elements assigned.
        -:  480:       */
        -:  481:      vector&
        -:  482:      operator=(initializer_list<value_type> __l)
        -:  483:      {
        -:  484:	this->_M_assign_aux(__l.begin(), __l.end(),
        -:  485:			    random_access_iterator_tag());
        -:  486:	return *this;
        -:  487:      }
        -:  488:#endif
        -:  489:
        -:  490:      /**
        -:  491:       *  @brief  Assigns a given value to a %vector.
        -:  492:       *  @param  __n  Number of elements to be assigned.
        -:  493:       *  @param  __val  Value to be assigned.
        -:  494:       *
        -:  495:       *  This function fills a %vector with @a __n copies of the given
        -:  496:       *  value.  Note that the assignment completely changes the
        -:  497:       *  %vector and that the resulting %vector's size is the same as
        -:  498:       *  the number of elements assigned.
        -:  499:       */
        -:  500:      void
        -:  501:      assign(size_type __n, const value_type& __val)
        -:  502:      { _M_fill_assign(__n, __val); }
        -:  503:
        -:  504:      /**
        -:  505:       *  @brief  Assigns a range to a %vector.
        -:  506:       *  @param  __first  An input iterator.
        -:  507:       *  @param  __last   An input iterator.
        -:  508:       *
        -:  509:       *  This function fills a %vector with copies of the elements in the
        -:  510:       *  range [__first,__last).
        -:  511:       *
        -:  512:       *  Note that the assignment completely changes the %vector and
        -:  513:       *  that the resulting %vector's size is the same as the number
        -:  514:       *  of elements assigned.
        -:  515:       */
        -:  516:#if __cplusplus >= 201103L
        -:  517:      template<typename _InputIterator,
        -:  518:	       typename = std::_RequireInputIter<_InputIterator>>
        -:  519:	void
        -:  520:	assign(_InputIterator __first, _InputIterator __last)
        -:  521:	{ _M_assign_dispatch(__first, __last, __false_type()); }
        -:  522:#else
        -:  523:      template<typename _InputIterator>
        -:  524:	void
        -:  525:	assign(_InputIterator __first, _InputIterator __last)
        -:  526:	{
        -:  527:	  // Check whether it's an integral type.  If so, it's not an iterator.
        -:  528:	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
        -:  529:	  _M_assign_dispatch(__first, __last, _Integral());
        -:  530:	}
        -:  531:#endif
        -:  532:
        -:  533:#if __cplusplus >= 201103L
        -:  534:      /**
        -:  535:       *  @brief  Assigns an initializer list to a %vector.
        -:  536:       *  @param  __l  An initializer_list.
        -:  537:       *
        -:  538:       *  This function fills a %vector with copies of the elements in the
        -:  539:       *  initializer list @a __l.
        -:  540:       *
        -:  541:       *  Note that the assignment completely changes the %vector and
        -:  542:       *  that the resulting %vector's size is the same as the number
        -:  543:       *  of elements assigned.
        -:  544:       */
        -:  545:      void
        -:  546:      assign(initializer_list<value_type> __l)
        -:  547:      {
        -:  548:	this->_M_assign_aux(__l.begin(), __l.end(),
        -:  549:			    random_access_iterator_tag());
        -:  550:      }
        -:  551:#endif
        -:  552:
        -:  553:      /// Get a copy of the memory allocation object.
        -:  554:      using _Base::get_allocator;
        -:  555:
        -:  556:      // iterators
        -:  557:      /**
        -:  558:       *  Returns a read/write iterator that points to the first
        -:  559:       *  element in the %vector.  Iteration is done in ordinary
        -:  560:       *  element order.
        -:  561:       */
        -:  562:      iterator
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIccESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIcSaIcEE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch14AssertionStatsESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch13SummaryColumnESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec6FilterESaIS2_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPKN5Catch8TestCaseESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorImSaImEE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt15__exception_ptr13exception_ptrESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch13ScopedMessageESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara8TextFlow6ColumnESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch14SectionEndInfoESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3ArgESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3OptESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11SectionInfoESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPN5Catch10ISingletonESaIS2_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec11FilterMatchESaIS2_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11MessageInfoESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestCaseESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch9StringRefESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail11HelpColumnsESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail5TokenESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
    #####:  563:      begin() _GLIBCXX_NOEXCEPT
    #####:  564:      { return iterator(this->_M_impl._M_start); }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
        -:  565:
        -:  566:      /**
        -:  567:       *  Returns a read-only (constant) iterator that points to the
        -:  568:       *  first element in the %vector.  Iteration is done in ordinary
        -:  569:       *  element order.
        -:  570:       */
        -:  571:      const_iterator
function _ZNKSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIccESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIcSaIcEE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch11SectionInfoESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorImSaImEE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestSpec11FilterMatchESaIS2_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch14SectionEndInfoESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail5TokenESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch14AssertionStatsESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch13SummaryColumnESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch11MessageInfoESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestSpec6FilterESaIS2_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt15__exception_ptr13exception_ptrESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIPKN5Catch8TestCaseESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestCaseESaIS1_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIiSaIiEE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail3ArgESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail3OptESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara8TextFlow6ColumnESaIS3_EE5beginEv called 0 returned 0% blocks executed 0%
    #####:  572:      begin() const _GLIBCXX_NOEXCEPT
    #####:  573:      { return const_iterator(this->_M_impl._M_start); }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
        -:  574:
        -:  575:      /**
        -:  576:       *  Returns a read/write iterator that points one past the last
        -:  577:       *  element in the %vector.  Iteration is done in ordinary
        -:  578:       *  element order.
        -:  579:       */
        -:  580:      iterator
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIccESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIcSaIcEE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch14AssertionStatsESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch13SummaryColumnESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail5TokenESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec6FilterESaIS2_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPKN5Catch8TestCaseESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorImSaImEE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt15__exception_ptr13exception_ptrESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch13ScopedMessageESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch14SectionEndInfoESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara8TextFlow6ColumnESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11SectionInfoESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPN5Catch10ISingletonESaIS2_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec11FilterMatchESaIS2_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11MessageInfoESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestCaseESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch9StringRefESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail11HelpColumnsESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3ArgESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3OptESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
    #####:  581:      end() _GLIBCXX_NOEXCEPT
    #####:  582:      { return iterator(this->_M_impl._M_finish); }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
        -:  583:
        -:  584:      /**
        -:  585:       *  Returns a read-only (constant) iterator that points one past
        -:  586:       *  the last element in the %vector.  Iteration is done in
        -:  587:       *  ordinary element order.
        -:  588:       */
        -:  589:      const_iterator
function _ZNKSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIccESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIcSaIcEE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch11SectionInfoESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorImSaImEE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestSpec11FilterMatchESaIS2_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch14SectionEndInfoESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail5TokenESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch14AssertionStatsESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch13SummaryColumnESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch11MessageInfoESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestSpec6FilterESaIS2_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt15__exception_ptr13exception_ptrESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIPKN5Catch8TestCaseESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestCaseESaIS1_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIiSaIiEE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail3ArgESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail3OptESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara8TextFlow6ColumnESaIS3_EE3endEv called 0 returned 0% blocks executed 0%
    #####:  590:      end() const _GLIBCXX_NOEXCEPT
    #####:  591:      { return const_iterator(this->_M_impl._M_finish); }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
        -:  592:
        -:  593:      /**
        -:  594:       *  Returns a read/write reverse iterator that points to the
        -:  595:       *  last element in the %vector.  Iteration is done in reverse
        -:  596:       *  element order.
        -:  597:       */
        -:  598:      reverse_iterator
function _ZNSt6vectorIN5Catch14SectionEndInfoESaIS1_EE6rbeginEv called 0 returned 0% blocks executed 0%
    #####:  599:      rbegin() _GLIBCXX_NOEXCEPT
    #####:  600:      { return reverse_iterator(end()); }
call    0 never executed
call    1 never executed
        -:  601:
        -:  602:      /**
        -:  603:       *  Returns a read-only (constant) reverse iterator that points
        -:  604:       *  to the last element in the %vector.  Iteration is done in
        -:  605:       *  reverse element order.
        -:  606:       */
        -:  607:      const_reverse_iterator
        -:  608:      rbegin() const _GLIBCXX_NOEXCEPT
        -:  609:      { return const_reverse_iterator(end()); }
        -:  610:
        -:  611:      /**
        -:  612:       *  Returns a read/write reverse iterator that points to one
        -:  613:       *  before the first element in the %vector.  Iteration is done
        -:  614:       *  in reverse element order.
        -:  615:       */
        -:  616:      reverse_iterator
function _ZNSt6vectorIN5Catch14SectionEndInfoESaIS1_EE4rendEv called 0 returned 0% blocks executed 0%
    #####:  617:      rend() _GLIBCXX_NOEXCEPT
    #####:  618:      { return reverse_iterator(begin()); }
call    0 never executed
call    1 never executed
        -:  619:
        -:  620:      /**
        -:  621:       *  Returns a read-only (constant) reverse iterator that points
        -:  622:       *  to one before the first element in the %vector.  Iteration
        -:  623:       *  is done in reverse element order.
        -:  624:       */
        -:  625:      const_reverse_iterator
        -:  626:      rend() const _GLIBCXX_NOEXCEPT
        -:  627:      { return const_reverse_iterator(begin()); }
        -:  628:
        -:  629:#if __cplusplus >= 201103L
        -:  630:      /**
        -:  631:       *  Returns a read-only (constant) iterator that points to the
        -:  632:       *  first element in the %vector.  Iteration is done in ordinary
        -:  633:       *  element order.
        -:  634:       */
        -:  635:      const_iterator
function _ZNKSt6vectorIcSaIcEE6cbeginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE6cbeginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch11MessageInfoESaIS1_EE6cbeginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail11HelpColumnsESaIS3_EE6cbeginEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail5TokenESaIS3_EE6cbeginEv called 0 returned 0% blocks executed 0%
    #####:  636:      cbegin() const noexcept
    #####:  637:      { return const_iterator(this->_M_impl._M_start); }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
        -:  638:
        -:  639:      /**
        -:  640:       *  Returns a read-only (constant) iterator that points one past
        -:  641:       *  the last element in the %vector.  Iteration is done in
        -:  642:       *  ordinary element order.
        -:  643:       */
        -:  644:      const_iterator
function _ZNKSt6vectorIN5Catch11MessageInfoESaIS1_EE4cendEv called 0 returned 0% blocks executed 0%
    #####:  645:      cend() const noexcept
    #####:  646:      { return const_iterator(this->_M_impl._M_finish); }
call    0 never executed
        -:  647:
        -:  648:      /**
        -:  649:       *  Returns a read-only (constant) reverse iterator that points
        -:  650:       *  to the last element in the %vector.  Iteration is done in
        -:  651:       *  reverse element order.
        -:  652:       */
        -:  653:      const_reverse_iterator
        -:  654:      crbegin() const noexcept
        -:  655:      { return const_reverse_iterator(end()); }
        -:  656:
        -:  657:      /**
        -:  658:       *  Returns a read-only (constant) reverse iterator that points
        -:  659:       *  to one before the first element in the %vector.  Iteration
        -:  660:       *  is done in reverse element order.
        -:  661:       */
        -:  662:      const_reverse_iterator
        -:  663:      crend() const noexcept
        -:  664:      { return const_reverse_iterator(begin()); }
        -:  665:#endif
        -:  666:
        -:  667:      // [23.2.4.2] capacity
        -:  668:      /**  Returns the number of elements in the %vector.  */
        -:  669:      size_type
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIccESaIS1_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIcSaIcEE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt8__detail6_StateIcEESaIS2_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch14AssertionStatsESaIS1_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch13SummaryColumnESaIS1_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail11HelpColumnsESaIS3_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt15__exception_ptr13exception_ptrESaIS1_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIPN5Catch10ISingletonESaIS2_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch13ScopedMessageESaIS1_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch14SectionEndInfoESaIS1_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorImSaImEE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIPKN5Catch8TestCaseESaIS3_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch11SectionInfoESaIS1_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestSpec6FilterESaIS2_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch11MessageInfoESaIS1_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestCaseESaIS1_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIiSaIiEE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch9StringRefESaIS1_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail3ArgESaIS3_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail3OptESaIS3_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail5TokenESaIS3_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara8TextFlow6ColumnESaIS3_EE4sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv called 0 returned 0% blocks executed 0%
    #####:  670:      size() const _GLIBCXX_NOEXCEPT
    #####:  671:      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
        -:  672:
        -:  673:      /**  Returns the size() of the largest possible %vector.  */
        -:  674:      size_type
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIccESaIS1_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIcSaIcEE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt8__detail6_StateIcEESaIS2_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch14AssertionStatsESaIS1_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch13SummaryColumnESaIS1_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch11SectionInfoESaIS1_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch9StringRefESaIS1_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail11HelpColumnsESaIS3_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestSpec6FilterESaIS2_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIPKN5Catch8TestCaseESaIS3_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorImSaImEE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt15__exception_ptr13exception_ptrESaIS1_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIPN5Catch10ISingletonESaIS2_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch13ScopedMessageESaIS1_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch14SectionEndInfoESaIS1_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch11MessageInfoESaIS1_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail3OptESaIS3_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail3ArgESaIS3_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail5TokenESaIS3_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara8TextFlow6ColumnESaIS3_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestCaseESaIS1_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE8max_sizeEv called 0 returned 0% blocks executed 0%
    #####:  675:      max_size() const _GLIBCXX_NOEXCEPT
    #####:  676:      { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
call   42 never executed
call   43 never executed
call   44 never executed
call   45 never executed
call   46 never executed
call   47 never executed
call   48 never executed
call   49 never executed
call   50 never executed
call   51 never executed
call   52 never executed
call   53 never executed
call   54 never executed
call   55 never executed
call   56 never executed
call   57 never executed
call   58 never executed
call   59 never executed
call   60 never executed
call   61 never executed
call   62 never executed
call   63 never executed
call   64 never executed
call   65 never executed
call   66 never executed
call   67 never executed
call   68 never executed
call   69 never executed
call   70 never executed
call   71 never executed
call   72 never executed
call   73 never executed
call   74 never executed
call   75 never executed
call   76 never executed
call   77 never executed
call   78 never executed
call   79 never executed
        -:  677:
        -:  678:#if __cplusplus >= 201103L
        -:  679:      /**
        -:  680:       *  @brief  Resizes the %vector to the specified number of elements.
        -:  681:       *  @param  __new_size  Number of elements the %vector should contain.
        -:  682:       *
        -:  683:       *  This function will %resize the %vector to the specified
        -:  684:       *  number of elements.  If the number is smaller than the
        -:  685:       *  %vector's current size the %vector is truncated, otherwise
        -:  686:       *  default constructed elements are appended.
        -:  687:       */
        -:  688:      void
function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE6resizeEm called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail5TokenESaIS3_EE6resizeEm called 0 returned 0% blocks executed 0%
    #####:  689:      resize(size_type __new_size)
        -:  690:      {
    #####:  691:	if (__new_size > size())
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  692:	  _M_default_append(__new_size - size());
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:  693:	else if (__new_size < size())
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  694:	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
call    0 never executed
call    1 never executed
    #####:  695:      }
        -:  696:
        -:  697:      /**
        -:  698:       *  @brief  Resizes the %vector to the specified number of elements.
        -:  699:       *  @param  __new_size  Number of elements the %vector should contain.
        -:  700:       *  @param  __x  Data with which new elements should be populated.
        -:  701:       *
        -:  702:       *  This function will %resize the %vector to the specified
        -:  703:       *  number of elements.  If the number is smaller than the
        -:  704:       *  %vector's current size the %vector is truncated, otherwise
        -:  705:       *  the %vector is extended and new elements are populated with
        -:  706:       *  given data.
        -:  707:       */
        -:  708:      void
        -:  709:      resize(size_type __new_size, const value_type& __x)
        -:  710:      {
        -:  711:	if (__new_size > size())
        -:  712:	  _M_fill_insert(end(), __new_size - size(), __x);
        -:  713:	else if (__new_size < size())
        -:  714:	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
        -:  715:      }
        -:  716:#else
        -:  717:      /**
        -:  718:       *  @brief  Resizes the %vector to the specified number of elements.
        -:  719:       *  @param  __new_size  Number of elements the %vector should contain.
        -:  720:       *  @param  __x  Data with which new elements should be populated.
        -:  721:       *
        -:  722:       *  This function will %resize the %vector to the specified
        -:  723:       *  number of elements.  If the number is smaller than the
        -:  724:       *  %vector's current size the %vector is truncated, otherwise
        -:  725:       *  the %vector is extended and new elements are populated with
        -:  726:       *  given data.
        -:  727:       */
        -:  728:      void
        -:  729:      resize(size_type __new_size, value_type __x = value_type())
        -:  730:      {
        -:  731:	if (__new_size > size())
        -:  732:	  _M_fill_insert(end(), __new_size - size(), __x);
        -:  733:	else if (__new_size < size())
        -:  734:	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
        -:  735:      }
        -:  736:#endif
        -:  737:
        -:  738:#if __cplusplus >= 201103L
        -:  739:      /**  A non-binding request to reduce capacity() to size().  */
        -:  740:      void
        -:  741:      shrink_to_fit()
        -:  742:      { _M_shrink_to_fit(); }
        -:  743:#endif
        -:  744:
        -:  745:      /**
        -:  746:       *  Returns the total number of elements that the %vector can
        -:  747:       *  hold before needing to allocate more memory.
        -:  748:       */
        -:  749:      size_type
function _ZNKSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE8capacityEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestCaseESaIS1_EE8capacityEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail3ArgESaIS3_EE8capacityEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail3OptESaIS3_EE8capacityEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE8capacityEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8capacityEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE8capacityEv called 0 returned 0% blocks executed 0%
    #####:  750:      capacity() const _GLIBCXX_NOEXCEPT
    #####:  751:      { return size_type(this->_M_impl._M_end_of_storage
    #####:  752:			 - this->_M_impl._M_start); }
        -:  753:
        -:  754:      /**
        -:  755:       *  Returns true if the %vector is empty.  (Thus begin() would
        -:  756:       *  equal end().)
        -:  757:       */
        -:  758:      bool
function _ZNKSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch14AssertionStatsESaIS1_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch11SectionInfoESaIS1_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestSpec6FilterESaIS2_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestCaseESaIS1_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorImSaImEE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt15__exception_ptr13exception_ptrESaIS1_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIPKN5Catch8TestCaseESaIS3_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestSpec11FilterMatchESaIS2_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch14SectionEndInfoESaIS1_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail3OptESaIS3_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5emptyEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail5TokenESaIS3_EE5emptyEv called 0 returned 0% blocks executed 0%
    #####:  759:      empty() const _GLIBCXX_NOEXCEPT
    #####:  760:      { return begin() == end(); }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
call   42 never executed
call   43 never executed
call   44 never executed
call   45 never executed
call   46 never executed
call   47 never executed
call   48 never executed
call   49 never executed
call   50 never executed
call   51 never executed
call   52 never executed
call   53 never executed
call   54 never executed
call   55 never executed
call   56 never executed
        -:  761:
        -:  762:      /**
        -:  763:       *  @brief  Attempt to preallocate enough memory for specified number of
        -:  764:       *          elements.
        -:  765:       *  @param  __n  Number of elements required.
        -:  766:       *  @throw  std::length_error  If @a n exceeds @c max_size().
        -:  767:       *
        -:  768:       *  This function attempts to reserve enough memory for the
        -:  769:       *  %vector to hold the specified number of elements.  If the
        -:  770:       *  number requested is more than max_size(), length_error is
        -:  771:       *  thrown.
        -:  772:       *
        -:  773:       *  The advantage of this function is that if optimal code is a
        -:  774:       *  necessity and the user can determine the number of elements
        -:  775:       *  that will be required, the user can reserve the memory in
        -:  776:       *  %advance, and thus prevent a possible reallocation of memory
        -:  777:       *  and copying of %vector data.
        -:  778:       */
        -:  779:      void
        -:  780:      reserve(size_type __n);
        -:  781:
        -:  782:      // element access
        -:  783:      /**
        -:  784:       *  @brief  Subscript access to the data contained in the %vector.
        -:  785:       *  @param __n The index of the element for which data should be
        -:  786:       *  accessed.
        -:  787:       *  @return  Read/write reference to data.
        -:  788:       *
        -:  789:       *  This operator allows for easy, array-style, data access.
        -:  790:       *  Note that data access with this operator is unchecked and
        -:  791:       *  out_of_range lookups are not defined. (For checked lookups
        -:  792:       *  see at().)
        -:  793:       */
        -:  794:      reference
function _ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EEixEm called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EEixEm called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEixEm called 0 returned 0% blocks executed 0%
function _ZNSt6vectorImSaImEEixEm called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EEixEm called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11MessageInfoESaIS1_EEixEm called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EEixEm called 0 returned 0% blocks executed 0%
    #####:  795:      operator[](size_type __n) _GLIBCXX_NOEXCEPT
        -:  796:      {
        -:  797:	__glibcxx_requires_subscript(__n);
    #####:  798:	return *(this->_M_impl._M_start + __n);
        -:  799:      }
        -:  800:
        -:  801:      /**
        -:  802:       *  @brief  Subscript access to the data contained in the %vector.
        -:  803:       *  @param __n The index of the element for which data should be
        -:  804:       *  accessed.
        -:  805:       *  @return  Read-only (constant) reference to data.
        -:  806:       *
        -:  807:       *  This operator allows for easy, array-style, data access.
        -:  808:       *  Note that data access with this operator is unchecked and
        -:  809:       *  out_of_range lookups are not defined. (For checked lookups
        -:  810:       *  see at().)
        -:  811:       */
        -:  812:      const_reference
function _ZNKSt6vectorINSt8__detail6_StateIcEESaIS2_EEixEm called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EEixEm called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EEixEm called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara8TextFlow6ColumnESaIS3_EEixEm called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm called 0 returned 0% blocks executed 0%
    #####:  813:      operator[](size_type __n) const _GLIBCXX_NOEXCEPT
        -:  814:      {
        -:  815:	__glibcxx_requires_subscript(__n);
    #####:  816:	return *(this->_M_impl._M_start + __n);
        -:  817:      }
        -:  818:
        -:  819:    protected:
        -:  820:      /// Safety check used only from at().
        -:  821:      void
        -:  822:      _M_range_check(size_type __n) const
        -:  823:      {
        -:  824:	if (__n >= this->size())
        -:  825:	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
        -:  826:				       "(which is %zu) >= this->size() "
        -:  827:				       "(which is %zu)"),
        -:  828:				   __n, this->size());
        -:  829:      }
        -:  830:
        -:  831:    public:
        -:  832:      /**
        -:  833:       *  @brief  Provides access to the data contained in the %vector.
        -:  834:       *  @param __n The index of the element for which data should be
        -:  835:       *  accessed.
        -:  836:       *  @return  Read/write reference to data.
        -:  837:       *  @throw  std::out_of_range  If @a __n is an invalid index.
        -:  838:       *
        -:  839:       *  This function provides for safer data access.  The parameter
        -:  840:       *  is first checked that it is in the range of the vector.  The
        -:  841:       *  function throws out_of_range if the check fails.
        -:  842:       */
        -:  843:      reference
        -:  844:      at(size_type __n)
        -:  845:      {
        -:  846:	_M_range_check(__n);
        -:  847:	return (*this)[__n];
        -:  848:      }
        -:  849:
        -:  850:      /**
        -:  851:       *  @brief  Provides access to the data contained in the %vector.
        -:  852:       *  @param __n The index of the element for which data should be
        -:  853:       *  accessed.
        -:  854:       *  @return  Read-only (constant) reference to data.
        -:  855:       *  @throw  std::out_of_range  If @a __n is an invalid index.
        -:  856:       *
        -:  857:       *  This function provides for safer data access.  The parameter
        -:  858:       *  is first checked that it is in the range of the vector.  The
        -:  859:       *  function throws out_of_range if the check fails.
        -:  860:       */
        -:  861:      const_reference
        -:  862:      at(size_type __n) const
        -:  863:      {
        -:  864:	_M_range_check(__n);
        -:  865:	return (*this)[__n];
        -:  866:      }
        -:  867:
        -:  868:      /**
        -:  869:       *  Returns a read/write reference to the data at the first
        -:  870:       *  element of the %vector.
        -:  871:       */
        -:  872:      reference
        -:  873:      front() _GLIBCXX_NOEXCEPT
        -:  874:      {
        -:  875:	__glibcxx_requires_nonempty();
        -:  876:	return *begin();
        -:  877:      }
        -:  878:
        -:  879:      /**
        -:  880:       *  Returns a read-only (constant) reference to the data at the first
        -:  881:       *  element of the %vector.
        -:  882:       */
        -:  883:      const_reference
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE5frontEv called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail5TokenESaIS3_EE5frontEv called 0 returned 0% blocks executed 0%
    #####:  884:      front() const _GLIBCXX_NOEXCEPT
        -:  885:      {
        -:  886:	__glibcxx_requires_nonempty();
    #####:  887:	return *begin();
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
        -:  888:      }
        -:  889:
        -:  890:      /**
        -:  891:       *  Returns a read/write reference to the data at the last
        -:  892:       *  element of the %vector.
        -:  893:       */
        -:  894:      reference
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE4backEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EE4backEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11SectionInfoESaIS1_EE4backEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4backEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorImSaImEE4backEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE4backEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11MessageInfoESaIS1_EE4backEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch9StringRefESaIS1_EE4backEv called 0 returned 0% blocks executed 0%
    #####:  895:      back() _GLIBCXX_NOEXCEPT
        -:  896:      {
        -:  897:	__glibcxx_requires_nonempty();
    #####:  898:	return *(end() - 1);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
        -:  899:      }
        -:  900:
        -:  901:      /**
        -:  902:       *  Returns a read-only (constant) reference to the data at the
        -:  903:       *  last element of the %vector.
        -:  904:       */
        -:  905:      const_reference
        -:  906:      back() const _GLIBCXX_NOEXCEPT
        -:  907:      {
        -:  908:	__glibcxx_requires_nonempty();
        -:  909:	return *(end() - 1);
        -:  910:      }
        -:  911:
        -:  912:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  913:      // DR 464. Suggestion for new member functions in standard containers.
        -:  914:      // data access
        -:  915:      /**
        -:  916:       *   Returns a pointer such that [data(), data() + size()) is a valid
        -:  917:       *   range.  For a non-empty %vector, data() == &front().
        -:  918:       */
        -:  919:      _Tp*
function _ZNSt6vectorIcSaIcEE4dataEv called 0 returned 0% blocks executed 0%
    #####:  920:      data() _GLIBCXX_NOEXCEPT
    #####:  921:      { return _M_data_ptr(this->_M_impl._M_start); }
call    0 never executed
        -:  922:
        -:  923:      const _Tp*
        -:  924:      data() const _GLIBCXX_NOEXCEPT
        -:  925:      { return _M_data_ptr(this->_M_impl._M_start); }
        -:  926:
        -:  927:      // [23.2.4.3] modifiers
        -:  928:      /**
        -:  929:       *  @brief  Add data to the end of the %vector.
        -:  930:       *  @param  __x  Data to be added.
        -:  931:       *
        -:  932:       *  This is a typical stack operation.  The function creates an
        -:  933:       *  element at the end of the %vector and assigns the given data
        -:  934:       *  to it.  Due to the nature of a %vector this operation can be
        -:  935:       *  done in constant time if the %vector has preallocated space
        -:  936:       *  available.
        -:  937:       */
        -:  938:      void
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EE9push_backERKSD_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE9push_backERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EE9push_backERKSB_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE9push_backERKS9_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE9push_backERKS6_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch14AssertionStatsESaIS1_EE9push_backERKS1_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11SectionInfoESaIS1_EE9push_backERKS1_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE9push_backERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec6FilterESaIS2_EE9push_backERKS2_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE9push_backERKS4_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestCaseESaIS1_EE9push_backERKS1_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorImSaImEE9push_backERKm called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt15__exception_ptr13exception_ptrESaIS1_EE9push_backERKS1_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPN5Catch10ISingletonESaIS2_EE9push_backERKS2_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch14SectionEndInfoESaIS1_EE9push_backERKS1_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EE9push_backERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11MessageInfoESaIS1_EE9push_backERKS1_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3OptESaIS3_EE9push_backERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3ArgESaIS3_EE9push_backERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara8TextFlow6ColumnESaIS3_EE9push_backERKS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ called 0 returned 0% blocks executed 0%
    #####:  939:      push_back(const value_type& __x)
        -:  940:      {
    #####:  941:	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
branch 18 never executed
branch 19 never executed
branch 20 never executed
branch 21 never executed
branch 22 never executed
branch 23 never executed
branch 24 never executed
branch 25 never executed
branch 26 never executed
branch 27 never executed
branch 28 never executed
branch 29 never executed
branch 30 never executed
branch 31 never executed
branch 32 never executed
branch 33 never executed
branch 34 never executed
branch 35 never executed
branch 36 never executed
branch 37 never executed
branch 38 never executed
branch 39 never executed
branch 40 never executed
branch 41 never executed
        -:  942:	  {
    #####:  943:	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
        -:  944:				     __x);
    #####:  945:	    ++this->_M_impl._M_finish;
        -:  946:	  }
        -:  947:	else
    #####:  948:	  _M_realloc_insert(end(), __x);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
    #####:  949:      }
        -:  950:
        -:  951:#if __cplusplus >= 201103L
        -:  952:      void
function _ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE9push_backEOS7_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIccESaIS1_EE9push_backEOS1_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIcSaIcEE9push_backEOc called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EE9push_backEOS5_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch13SummaryColumnESaIS1_EE9push_backEOS1_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch9StringRefESaIS1_EE9push_backEOS1_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EE9push_backEOS9_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE9push_backEOS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EE9push_backEOS6_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EE9push_backEOS6_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE9push_backEOS7_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail5TokenESaIS3_EE9push_backEOS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE9push_backEOS4_ called 0 returned 0% blocks executed 0%
    #####:  953:      push_back(value_type&& __x)
    #####:  954:      { emplace_back(std::move(__x)); }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
        -:  955:
        -:  956:      template<typename... _Args>
        -:  957:#if __cplusplus > 201402L
        -:  958:	reference
        -:  959:#else
        -:  960:	void
        -:  961:#endif
        -:  962:	emplace_back(_Args&&... __args);
        -:  963:#endif
        -:  964:
        -:  965:      /**
        -:  966:       *  @brief  Removes last element.
        -:  967:       *
        -:  968:       *  This is a typical stack operation. It shrinks the %vector by one.
        -:  969:       *
        -:  970:       *  Note that no data is returned, and if the last element's
        -:  971:       *  data is needed, it should be retrieved before pop_back() is
        -:  972:       *  called.
        -:  973:       */
        -:  974:      void
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE8pop_backEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11SectionInfoESaIS1_EE8pop_backEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8pop_backEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorImSaImEE8pop_backEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE8pop_backEv called 0 returned 0% blocks executed 0%
    #####:  975:      pop_back() _GLIBCXX_NOEXCEPT
        -:  976:      {
        -:  977:	__glibcxx_requires_nonempty();
    #####:  978:	--this->_M_impl._M_finish;
    #####:  979:	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
    #####:  980:      }
        -:  981:
        -:  982:#if __cplusplus >= 201103L
        -:  983:      /**
        -:  984:       *  @brief  Inserts an object in %vector before specified iterator.
        -:  985:       *  @param  __position  A const_iterator into the %vector.
        -:  986:       *  @param  __args  Arguments.
        -:  987:       *  @return  An iterator that points to the inserted data.
        -:  988:       *
        -:  989:       *  This function will insert an object of type T constructed
        -:  990:       *  with T(std::forward<Args>(args)...) before the specified location.
        -:  991:       *  Note that this kind of operation could be expensive for a %vector
        -:  992:       *  and if it is frequently used the user should consider using
        -:  993:       *  std::list.
        -:  994:       */
        -:  995:      template<typename... _Args>
        -:  996:	iterator
        -:  997:	emplace(const_iterator __position, _Args&&... __args)
        -:  998:	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
        -:  999:
        -: 1000:      /**
        -: 1001:       *  @brief  Inserts given value into %vector before specified iterator.
        -: 1002:       *  @param  __position  A const_iterator into the %vector.
        -: 1003:       *  @param  __x  Data to be inserted.
        -: 1004:       *  @return  An iterator that points to the inserted data.
        -: 1005:       *
        -: 1006:       *  This function will insert a copy of the given value before
        -: 1007:       *  the specified location.  Note that this kind of operation
        -: 1008:       *  could be expensive for a %vector and if it is frequently
        -: 1009:       *  used the user should consider using std::list.
        -: 1010:       */
        -: 1011:      iterator
        -: 1012:      insert(const_iterator __position, const value_type& __x);
        -: 1013:#else
        -: 1014:      /**
        -: 1015:       *  @brief  Inserts given value into %vector before specified iterator.
        -: 1016:       *  @param  __position  An iterator into the %vector.
        -: 1017:       *  @param  __x  Data to be inserted.
        -: 1018:       *  @return  An iterator that points to the inserted data.
        -: 1019:       *
        -: 1020:       *  This function will insert a copy of the given value before
        -: 1021:       *  the specified location.  Note that this kind of operation
        -: 1022:       *  could be expensive for a %vector and if it is frequently
        -: 1023:       *  used the user should consider using std::list.
        -: 1024:       */
        -: 1025:      iterator
        -: 1026:      insert(iterator __position, const value_type& __x);
        -: 1027:#endif
        -: 1028:
        -: 1029:#if __cplusplus >= 201103L
        -: 1030:      /**
        -: 1031:       *  @brief  Inserts given rvalue into %vector before specified iterator.
        -: 1032:       *  @param  __position  A const_iterator into the %vector.
        -: 1033:       *  @param  __x  Data to be inserted.
        -: 1034:       *  @return  An iterator that points to the inserted data.
        -: 1035:       *
        -: 1036:       *  This function will insert a copy of the given rvalue before
        -: 1037:       *  the specified location.  Note that this kind of operation
        -: 1038:       *  could be expensive for a %vector and if it is frequently
        -: 1039:       *  used the user should consider using std::list.
        -: 1040:       */
        -: 1041:      iterator
        -: 1042:      insert(const_iterator __position, value_type&& __x)
        -: 1043:      { return _M_insert_rval(__position, std::move(__x)); }
        -: 1044:
        -: 1045:      /**
        -: 1046:       *  @brief  Inserts an initializer_list into the %vector.
        -: 1047:       *  @param  __position  An iterator into the %vector.
        -: 1048:       *  @param  __l  An initializer_list.
        -: 1049:       *
        -: 1050:       *  This function will insert copies of the data in the
        -: 1051:       *  initializer_list @a l into the %vector before the location
        -: 1052:       *  specified by @a position.
        -: 1053:       *
        -: 1054:       *  Note that this kind of operation could be expensive for a
        -: 1055:       *  %vector and if it is frequently used the user should
        -: 1056:       *  consider using std::list.
        -: 1057:       */
        -: 1058:      iterator
        -: 1059:      insert(const_iterator __position, initializer_list<value_type> __l)
        -: 1060:      {
        -: 1061:	auto __offset = __position - cbegin();
        -: 1062:	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
        -: 1063:			std::random_access_iterator_tag());
        -: 1064:	return begin() + __offset;
        -: 1065:      }
        -: 1066:#endif
        -: 1067:
        -: 1068:#if __cplusplus >= 201103L
        -: 1069:      /**
        -: 1070:       *  @brief  Inserts a number of copies of given data into the %vector.
        -: 1071:       *  @param  __position  A const_iterator into the %vector.
        -: 1072:       *  @param  __n  Number of elements to be inserted.
        -: 1073:       *  @param  __x  Data to be inserted.
        -: 1074:       *  @return  An iterator that points to the inserted data.
        -: 1075:       *
        -: 1076:       *  This function will insert a specified number of copies of
        -: 1077:       *  the given data before the location specified by @a position.
        -: 1078:       *
        -: 1079:       *  Note that this kind of operation could be expensive for a
        -: 1080:       *  %vector and if it is frequently used the user should
        -: 1081:       *  consider using std::list.
        -: 1082:       */
        -: 1083:      iterator
        -: 1084:      insert(const_iterator __position, size_type __n, const value_type& __x)
        -: 1085:      {
        -: 1086:	difference_type __offset = __position - cbegin();
        -: 1087:	_M_fill_insert(begin() + __offset, __n, __x);
        -: 1088:	return begin() + __offset;
        -: 1089:      }
        -: 1090:#else
        -: 1091:      /**
        -: 1092:       *  @brief  Inserts a number of copies of given data into the %vector.
        -: 1093:       *  @param  __position  An iterator into the %vector.
        -: 1094:       *  @param  __n  Number of elements to be inserted.
        -: 1095:       *  @param  __x  Data to be inserted.
        -: 1096:       *
        -: 1097:       *  This function will insert a specified number of copies of
        -: 1098:       *  the given data before the location specified by @a position.
        -: 1099:       *
        -: 1100:       *  Note that this kind of operation could be expensive for a
        -: 1101:       *  %vector and if it is frequently used the user should
        -: 1102:       *  consider using std::list.
        -: 1103:       */
        -: 1104:      void
        -: 1105:      insert(iterator __position, size_type __n, const value_type& __x)
        -: 1106:      { _M_fill_insert(__position, __n, __x); }
        -: 1107:#endif
        -: 1108:
        -: 1109:#if __cplusplus >= 201103L
        -: 1110:      /**
        -: 1111:       *  @brief  Inserts a range into the %vector.
        -: 1112:       *  @param  __position  A const_iterator into the %vector.
        -: 1113:       *  @param  __first  An input iterator.
        -: 1114:       *  @param  __last   An input iterator.
        -: 1115:       *  @return  An iterator that points to the inserted data.
        -: 1116:       *
        -: 1117:       *  This function will insert copies of the data in the range
        -: 1118:       *  [__first,__last) into the %vector before the location specified
        -: 1119:       *  by @a pos.
        -: 1120:       *
        -: 1121:       *  Note that this kind of operation could be expensive for a
        -: 1122:       *  %vector and if it is frequently used the user should
        -: 1123:       *  consider using std::list.
        -: 1124:       */
        -: 1125:      template<typename _InputIterator,
        -: 1126:	       typename = std::_RequireInputIter<_InputIterator>>
        -: 1127:	iterator
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE6insertIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEvEENSA_IPS5_S7_EESD_T_SG_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail11HelpColumnsESaIS3_EE6insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEvEESA_NS8_IPKS3_S5_EET_SE_ called 0 returned 0% blocks executed 0%
    #####: 1128:	insert(const_iterator __position, _InputIterator __first,
        -: 1129:	       _InputIterator __last)
        -: 1130:	{
    #####: 1131:	  difference_type __offset = __position - cbegin();
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####: 1132:	  _M_insert_dispatch(begin() + __offset,
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
        -: 1133:			     __first, __last, __false_type());
    #####: 1134:	  return begin() + __offset;
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
        -: 1135:	}
        -: 1136:#else
        -: 1137:      /**
        -: 1138:       *  @brief  Inserts a range into the %vector.
        -: 1139:       *  @param  __position  An iterator into the %vector.
        -: 1140:       *  @param  __first  An input iterator.
        -: 1141:       *  @param  __last   An input iterator.
        -: 1142:       *
        -: 1143:       *  This function will insert copies of the data in the range
        -: 1144:       *  [__first,__last) into the %vector before the location specified
        -: 1145:       *  by @a pos.
        -: 1146:       *
        -: 1147:       *  Note that this kind of operation could be expensive for a
        -: 1148:       *  %vector and if it is frequently used the user should
        -: 1149:       *  consider using std::list.
        -: 1150:       */
        -: 1151:      template<typename _InputIterator>
        -: 1152:	void
        -: 1153:	insert(iterator __position, _InputIterator __first,
        -: 1154:	       _InputIterator __last)
        -: 1155:	{
        -: 1156:	  // Check whether it's an integral type.  If so, it's not an iterator.
        -: 1157:	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
        -: 1158:	  _M_insert_dispatch(__position, __first, __last, _Integral());
        -: 1159:	}
        -: 1160:#endif
        -: 1161:
        -: 1162:      /**
        -: 1163:       *  @brief  Remove element at given position.
        -: 1164:       *  @param  __position  Iterator pointing to element to be erased.
        -: 1165:       *  @return  An iterator pointing to the next element (or end()).
        -: 1166:       *
        -: 1167:       *  This function will erase the element at the given position and thus
        -: 1168:       *  shorten the %vector by one.
        -: 1169:       *
        -: 1170:       *  Note This operation could be expensive and if it is
        -: 1171:       *  frequently used the user should consider using std::list.
        -: 1172:       *  The user is also cautioned that this function only erases
        -: 1173:       *  the element, and that if the element is itself a pointer,
        -: 1174:       *  the pointed-to memory is not touched in any way.  Managing
        -: 1175:       *  the pointer is the user's responsibility.
        -: 1176:       */
        -: 1177:      iterator
        -: 1178:#if __cplusplus >= 201103L
function _ZNSt6vectorIN5Catch5clara6detail5TokenESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE called 0 returned 0% blocks executed 0%
    #####: 1179:      erase(const_iterator __position)
    #####: 1180:      { return _M_erase(begin() + (__position - cbegin())); }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
        -: 1181:#else
        -: 1182:      erase(iterator __position)
        -: 1183:      { return _M_erase(__position); }
        -: 1184:#endif
        -: 1185:
        -: 1186:      /**
        -: 1187:       *  @brief  Remove a range of elements.
        -: 1188:       *  @param  __first  Iterator pointing to the first element to be erased.
        -: 1189:       *  @param  __last  Iterator pointing to one past the last element to be
        -: 1190:       *                  erased.
        -: 1191:       *  @return  An iterator pointing to the element pointed to by @a __last
        -: 1192:       *           prior to erasing (or end()).
        -: 1193:       *
        -: 1194:       *  This function will erase the elements in the range
        -: 1195:       *  [__first,__last) and shorten the %vector accordingly.
        -: 1196:       *
        -: 1197:       *  Note This operation could be expensive and if it is
        -: 1198:       *  frequently used the user should consider using std::list.
        -: 1199:       *  The user is also cautioned that this function only erases
        -: 1200:       *  the elements, and that if the elements themselves are
        -: 1201:       *  pointers, the pointed-to memory is not touched in any way.
        -: 1202:       *  Managing the pointer is the user's responsibility.
        -: 1203:       */
        -: 1204:      iterator
        -: 1205:#if __cplusplus >= 201103L
function _ZNSt6vectorIcSaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS1_EES6_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EESC_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11MessageInfoESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EES8_ called 0 returned 0% blocks executed 0%
    #####: 1206:      erase(const_iterator __first, const_iterator __last)
        -: 1207:      {
    #####: 1208:	const auto __beg = begin();
call    0 never executed
call    1 never executed
call    2 never executed
    #####: 1209:	const auto __cbeg = cbegin();
call    0 never executed
call    1 never executed
call    2 never executed
    #####: 1210:	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
        -: 1211:      }
        -: 1212:#else
        -: 1213:      erase(iterator __first, iterator __last)
        -: 1214:      { return _M_erase(__first, __last); }
        -: 1215:#endif
        -: 1216:
        -: 1217:      /**
        -: 1218:       *  @brief  Swaps data with another %vector.
        -: 1219:       *  @param  __x  A %vector of the same element and allocator types.
        -: 1220:       *
        -: 1221:       *  This exchanges the elements between two vectors in constant time.
        -: 1222:       *  (Three pointers, so it should be quite fast.)
        -: 1223:       *  Note that the global std::swap() function is specialized such that
        -: 1224:       *  std::swap(v1,v2) will feed to this function.
        -: 1225:       *
        -: 1226:       *  Whether the allocators are swapped depends on the allocator traits.
        -: 1227:       */
        -: 1228:      void
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EE4swapERSD_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE4swapERSB_ called 0 returned 0% blocks executed 0%
    #####: 1229:      swap(vector& __x) _GLIBCXX_NOEXCEPT
        -: 1230:      {
        -: 1231:#if __cplusplus >= 201103L
        -: 1232:	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
        -: 1233:			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
        -: 1234:#endif
    #####: 1235:	this->_M_impl._M_swap_data(__x._M_impl);
call    0 never executed
call    1 never executed
    #####: 1236:	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
        -: 1237:				  __x._M_get_Tp_allocator());
    #####: 1238:      }
        -: 1239:
        -: 1240:      /**
        -: 1241:       *  Erases all the elements.  Note that this function only erases the
        -: 1242:       *  elements, and that if the elements themselves are pointers, the
        -: 1243:       *  pointed-to memory is not touched in any way.  Managing the pointer is
        -: 1244:       *  the user's responsibility.
        -: 1245:       */
        -: 1246:      void
function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3ArgESaIS3_EE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3OptESaIS3_EE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorImSaImEE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch14SectionEndInfoESaIS1_EE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11MessageInfoESaIS1_EE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch13ScopedMessageESaIS1_EE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE5clearEv called 0 returned 0% blocks executed 0%
    #####: 1247:      clear() _GLIBCXX_NOEXCEPT
    #####: 1248:      { _M_erase_at_end(this->_M_impl._M_start); }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
        -: 1249:
        -: 1250:    protected:
        -: 1251:      /**
        -: 1252:       *  Memory expansion handler.  Uses the member allocation function to
        -: 1253:       *  obtain @a n bytes of memory, and then copies [first,last) into it.
        -: 1254:       */
        -: 1255:      template<typename _ForwardIterator>
        -: 1256:	pointer
function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE20_M_allocate_and_copyINS3_IPKSC_SE_EEEEPSC_mT_SK_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestCaseESaIS1_EE20_M_allocate_and_copyISt13move_iteratorIPS1_EEES6_mT_S8_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3ArgESaIS3_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEPS3_mT_SD_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3OptESaIS3_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEPS3_mT_SD_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE20_M_allocate_and_copyISt13move_iteratorIPS7_EEESC_mT_SE_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyISt13move_iteratorIPS5_EEESA_mT_SC_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE20_M_allocate_and_copyISt13move_iteratorIPS4_EEES9_mT_SB_ called 0 returned 0% blocks executed 0%
    #####: 1257:	_M_allocate_and_copy(size_type __n,
        -: 1258:			     _ForwardIterator __first, _ForwardIterator __last)
        -: 1259:	{
    #####: 1260:	  pointer __result = this->_M_allocate(__n);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
        -: 1261:	  __try
        -: 1262:	    {
    #####: 1263:	      std::__uninitialized_copy_a(__first, __last, __result,
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
call   21 never executed
branch 22 never executed
branch 23 never executed
    #####: 1264:					  _M_get_Tp_allocator());
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
    #####: 1265:	      return __result;
        -: 1266:	    }
    =====: 1267:	  __catch(...)
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
        -: 1268:	    {
    =====: 1269:	      _M_deallocate(__result, __n);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
call   21 never executed
branch 22 never executed
branch 23 never executed
    =====: 1270:	      __throw_exception_again;
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
        -: 1271:	    }
        -: 1272:	}
        -: 1273:
        -: 1274:
        -: 1275:      // Internal constructor functions follow.
        -: 1276:
        -: 1277:      // Called by the range constructor to implement [23.1.1]/9
        -: 1278:
        -: 1279:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -: 1280:      // 438. Ambiguity in the "do the right thing" clause
        -: 1281:      template<typename _Integer>
        -: 1282:	void
        -: 1283:	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
        -: 1284:	{
        -: 1285:	  this->_M_impl._M_start = _M_allocate(static_cast<size_type>(__n));
        -: 1286:	  this->_M_impl._M_end_of_storage =
        -: 1287:	    this->_M_impl._M_start + static_cast<size_type>(__n);
        -: 1288:	  _M_fill_initialize(static_cast<size_type>(__n), __value);
        -: 1289:	}
        -: 1290:
        -: 1291:      // Called by the range constructor to implement [23.1.1]/9
        -: 1292:      template<typename _InputIterator>
        -: 1293:	void
function _ZNSt6vectorIcSaIcEE22_M_initialize_dispatchIPKcEEvT_S5_St12__false_type called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE22_M_initialize_dispatchIPKPKcEEvT_SD_St12__false_type called 0 returned 0% blocks executed 0%
    #####: 1294:	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
        -: 1295:			       __false_type)
        -: 1296:	{
        -: 1297:	  typedef typename std::iterator_traits<_InputIterator>::
        -: 1298:	    iterator_category _IterCategory;
    #####: 1299:	  _M_range_initialize(__first, __last, _IterCategory());
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####: 1300:	}
        -: 1301:
        -: 1302:      // Called by the second initialize_dispatch above
        -: 1303:      template<typename _InputIterator>
        -: 1304:	void
        -: 1305:	_M_range_initialize(_InputIterator __first, _InputIterator __last,
        -: 1306:			    std::input_iterator_tag)
        -: 1307:	{
        -: 1308:	  __try {
        -: 1309:	    for (; __first != __last; ++__first)
        -: 1310:#if __cplusplus >= 201103L
        -: 1311:	      emplace_back(*__first);
        -: 1312:#else
        -: 1313:	      push_back(*__first);
        -: 1314:#endif
        -: 1315:	  } __catch(...) {
        -: 1316:	    clear();
        -: 1317:	    __throw_exception_again;
        -: 1318:	  }
        -: 1319:	}
        -: 1320:
        -: 1321:      // Called by the second initialize_dispatch above
        -: 1322:      template<typename _ForwardIterator>
        -: 1323:	void
function _ZNSt6vectorIcSaIcEE19_M_range_initializeIPKcEEvT_S5_St20forward_iterator_tag called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIPKPKcEEvT_SD_St20forward_iterator_tag called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch12_GLOBAL__N_110ColumnInfoESaIS2_EE19_M_range_initializeIPKS2_EEvT_S8_St20forward_iterator_tag called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail11HelpColumnsESaIS3_EE19_M_range_initializeIPKS3_EEvT_S9_St20forward_iterator_tag called 0 returned 0% blocks executed 0%
    #####: 1324:	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
        -: 1325:			    std::forward_iterator_tag)
        -: 1326:	{
    #####: 1327:	  const size_type __n = std::distance(__first, __last);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####: 1328:	  this->_M_impl._M_start = this->_M_allocate(__n);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####: 1329:	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    #####: 1330:	  this->_M_impl._M_finish =
    #####: 1331:	    std::__uninitialized_copy_a(__first, __last,
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
        -: 1332:					this->_M_impl._M_start,
    #####: 1333:					_M_get_Tp_allocator());
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####: 1334:	}
        -: 1335:
        -: 1336:      // Called by the first initialize_dispatch above and by the
        -: 1337:      // vector(n,value,a) constructor.
        -: 1338:      void
        -: 1339:      _M_fill_initialize(size_type __n, const value_type& __value)
        -: 1340:      {
        -: 1341:	this->_M_impl._M_finish =
        -: 1342:	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
        -: 1343:					_M_get_Tp_allocator());
        -: 1344:      }
        -: 1345:
        -: 1346:#if __cplusplus >= 201103L
        -: 1347:      // Called by the vector(n) constructor.
        -: 1348:      void
function _ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EE21_M_default_initializeEm called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec11FilterMatchESaIS2_EE21_M_default_initializeEm called 0 returned 0% blocks executed 0%
    #####: 1349:      _M_default_initialize(size_type __n)
        -: 1350:      {
    #####: 1351:	this->_M_impl._M_finish =
    #####: 1352:	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
call    0 never executed
call    1 never executed
    #####: 1353:					   _M_get_Tp_allocator());
call    0 never executed
call    1 never executed
    #####: 1354:      }
        -: 1355:#endif
        -: 1356:
        -: 1357:      // Internal assign functions follow.  The *_aux functions do the actual
        -: 1358:      // assignment work for the range versions.
        -: 1359:
        -: 1360:      // Called by the range assign to implement [23.1.1]/9
        -: 1361:
        -: 1362:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -: 1363:      // 438. Ambiguity in the "do the right thing" clause
        -: 1364:      template<typename _Integer>
        -: 1365:	void
        -: 1366:	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
        -: 1367:	{ _M_fill_assign(__n, __val); }
        -: 1368:
        -: 1369:      // Called by the range assign to implement [23.1.1]/9
        -: 1370:      template<typename _InputIterator>
        -: 1371:	void
        -: 1372:	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
        -: 1373:			   __false_type)
        -: 1374:	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
        -: 1375:
        -: 1376:      // Called by the second assign_dispatch above
        -: 1377:      template<typename _InputIterator>
        -: 1378:	void
        -: 1379:	_M_assign_aux(_InputIterator __first, _InputIterator __last,
        -: 1380:		      std::input_iterator_tag);
        -: 1381:
        -: 1382:      // Called by the second assign_dispatch above
        -: 1383:      template<typename _ForwardIterator>
        -: 1384:	void
        -: 1385:	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
        -: 1386:		      std::forward_iterator_tag);
        -: 1387:
        -: 1388:      // Called by assign(n,t), and the range assign when it turns out
        -: 1389:      // to be the same thing.
        -: 1390:      void
        -: 1391:      _M_fill_assign(size_type __n, const value_type& __val);
        -: 1392:
        -: 1393:      // Internal insert functions follow.
        -: 1394:
        -: 1395:      // Called by the range insert to implement [23.1.1]/9
        -: 1396:
        -: 1397:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -: 1398:      // 438. Ambiguity in the "do the right thing" clause
        -: 1399:      template<typename _Integer>
        -: 1400:	void
        -: 1401:	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
        -: 1402:			   __true_type)
        -: 1403:	{ _M_fill_insert(__pos, __n, __val); }
        -: 1404:
        -: 1405:      // Called by the range insert to implement [23.1.1]/9
        -: 1406:      template<typename _InputIterator>
        -: 1407:	void
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE18_M_insert_dispatchIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEvNSA_IPS5_S7_EET_SG_St12__false_type called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail11HelpColumnsESaIS3_EE18_M_insert_dispatchIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St12__false_type called 0 returned 0% blocks executed 0%
    #####: 1408:	_M_insert_dispatch(iterator __pos, _InputIterator __first,
        -: 1409:			   _InputIterator __last, __false_type)
        -: 1410:	{
    #####: 1411:	  _M_range_insert(__pos, __first, __last,
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####: 1412:			  std::__iterator_category(__first));
call    0 never executed
call    1 never executed
    #####: 1413:	}
        -: 1414:
        -: 1415:      // Called by the second insert_dispatch above
        -: 1416:      template<typename _InputIterator>
        -: 1417:	void
        -: 1418:	_M_range_insert(iterator __pos, _InputIterator __first,
        -: 1419:			_InputIterator __last, std::input_iterator_tag);
        -: 1420:
        -: 1421:      // Called by the second insert_dispatch above
        -: 1422:      template<typename _ForwardIterator>
        -: 1423:	void
        -: 1424:	_M_range_insert(iterator __pos, _ForwardIterator __first,
        -: 1425:			_ForwardIterator __last, std::forward_iterator_tag);
        -: 1426:
        -: 1427:      // Called by insert(p,n,x), and the range insert when it turns out to be
        -: 1428:      // the same thing.
        -: 1429:      void
        -: 1430:      _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
        -: 1431:
        -: 1432:#if __cplusplus >= 201103L
        -: 1433:      // Called by resize(n).
        -: 1434:      void
        -: 1435:      _M_default_append(size_type __n);
        -: 1436:
        -: 1437:      bool
        -: 1438:      _M_shrink_to_fit();
        -: 1439:#endif
        -: 1440:
        -: 1441:#if __cplusplus < 201103L
        -: 1442:      // Called by insert(p,x)
        -: 1443:      void
        -: 1444:      _M_insert_aux(iterator __position, const value_type& __x);
        -: 1445:
        -: 1446:      void
        -: 1447:      _M_realloc_insert(iterator __position, const value_type& __x);
        -: 1448:#else
        -: 1449:      // A value_type object constructed with _Alloc_traits::construct()
        -: 1450:      // and destroyed with _Alloc_traits::destroy().
        -: 1451:      struct _Temporary_value
        -: 1452:      {
        -: 1453:	template<typename... _Args>
        -: 1454:	  explicit
        -: 1455:	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
        -: 1456:	  {
        -: 1457:	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
        -: 1458:				     std::forward<_Args>(__args)...);
        -: 1459:	  }
        -: 1460:
        -: 1461:	~_Temporary_value()
        -: 1462:	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
        -: 1463:
        -: 1464:	value_type&
        -: 1465:	_M_val() { return *reinterpret_cast<_Tp*>(&__buf); }
        -: 1466:
        -: 1467:      private:
        -: 1468:	pointer
        -: 1469:	_M_ptr() { return pointer_traits<pointer>::pointer_to(_M_val()); }
        -: 1470:
        -: 1471:	vector* _M_this;
        -: 1472:	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
        -: 1473:      };
        -: 1474:
        -: 1475:      // Called by insert(p,x) and other functions when insertion needs to
        -: 1476:      // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
        -: 1477:      template<typename _Arg>
        -: 1478:	void
        -: 1479:	_M_insert_aux(iterator __position, _Arg&& __arg);
        -: 1480:
        -: 1481:      template<typename... _Args>
        -: 1482:	void
        -: 1483:	_M_realloc_insert(iterator __position, _Args&&... __args);
        -: 1484:
        -: 1485:      // Either move-construct at the end, or forward to _M_insert_aux.
        -: 1486:      iterator
        -: 1487:      _M_insert_rval(const_iterator __position, value_type&& __v);
        -: 1488:
        -: 1489:      // Try to emplace at the end, otherwise forward to _M_insert_aux.
        -: 1490:      template<typename... _Args>
        -: 1491:	iterator
        -: 1492:	_M_emplace_aux(const_iterator __position, _Args&&... __args);
        -: 1493:
        -: 1494:      // Emplacing an rvalue of the correct type can use _M_insert_rval.
        -: 1495:      iterator
        -: 1496:      _M_emplace_aux(const_iterator __position, value_type&& __v)
        -: 1497:      { return _M_insert_rval(__position, std::move(__v)); }
        -: 1498:#endif
        -: 1499:
        -: 1500:      // Called by _M_fill_insert, _M_insert_aux etc.
        -: 1501:      size_type
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_12TestRunStatsENS5_INS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEEEESaISD_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIccESaIS1_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE12_M_check_lenEmS6_ called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt8__detail6_StateIcEESaIS2_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE12_M_check_lenEmS5_ called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrIN5Catch18IStreamingReporterESt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_14TestGroupStatsENS5_INS1_13TestCaseStatsENS4_11SectionNodeEEEEEESaISB_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE4NodeINS1_13TestCaseStatsENS4_11SectionNodeEEEESaIS9_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch22CumulativeReporterBaseINS1_13JunitReporterEE11SectionNodeEESaIS6_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch14AssertionStatsESaIS1_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch13SummaryColumnESaIS1_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch11SectionInfoESaIS1_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch9StringRefESaIS1_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEESt14default_deleteIS6_EESaIS9_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIPN5Catch16TestCaseTracking8ITrackerESaIS3_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrIKN5Catch20IExceptionTranslatorESt14default_deleteIS3_EESaIS6_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10unique_ptrIN5Catch6Detail8EnumInfoESt14default_deleteIS3_EESaIS6_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail11HelpColumnsESaIS3_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestSpec6FilterESaIS2_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIPKN5Catch8TestCaseESaIS3_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch8TestCaseESaIS1_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorImSaImEE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt15__exception_ptr13exception_ptrESaIS1_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIPN5Catch10ISingletonESaIS2_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch13ScopedMessageESaIS1_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch14SectionEndInfoESaIS1_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorISt10shared_ptrIN5Catch16IReporterFactoryEESaIS3_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch11MessageInfoESaIS1_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail3OptESaIS3_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail3ArgESaIS3_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara6detail5TokenESaIS3_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorIN5Catch5clara8TextFlow6ColumnESaIS3_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
function _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc called 0 returned 0% blocks executed 0%
    #####: 1502:      _M_check_len(size_type __n, const char* __s) const
        -: 1503:      {
    #####: 1504:	if (max_size() - size() < __n)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
call    8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
branch 18 never executed
branch 19 never executed
call   20 never executed
call   21 never executed
branch 22 never executed
branch 23 never executed
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
call   28 never executed
call   29 never executed
branch 30 never executed
branch 31 never executed
call   32 never executed
call   33 never executed
branch 34 never executed
branch 35 never executed
call   36 never executed
call   37 never executed
branch 38 never executed
branch 39 never executed
call   40 never executed
call   41 never executed
branch 42 never executed
branch 43 never executed
call   44 never executed
call   45 never executed
branch 46 never executed
branch 47 never executed
call   48 never executed
call   49 never executed
branch 50 never executed
branch 51 never executed
call   52 never executed
call   53 never executed
branch 54 never executed
branch 55 never executed
call   56 never executed
call   57 never executed
branch 58 never executed
branch 59 never executed
call   60 never executed
call   61 never executed
branch 62 never executed
branch 63 never executed
call   64 never executed
call   65 never executed
branch 66 never executed
branch 67 never executed
call   68 never executed
call   69 never executed
branch 70 never executed
branch 71 never executed
call   72 never executed
call   73 never executed
branch 74 never executed
branch 75 never executed
call   76 never executed
call   77 never executed
branch 78 never executed
branch 79 never executed
call   80 never executed
call   81 never executed
branch 82 never executed
branch 83 never executed
call   84 never executed
call   85 never executed
branch 86 never executed
branch 87 never executed
call   88 never executed
call   89 never executed
branch 90 never executed
branch 91 never executed
call   92 never executed
call   93 never executed
branch 94 never executed
branch 95 never executed
call   96 never executed
call   97 never executed
branch 98 never executed
branch 99 never executed
call   100 never executed
call   101 never executed
branch 102 never executed
branch 103 never executed
call   104 never executed
call   105 never executed
branch 106 never executed
branch 107 never executed
call   108 never executed
call   109 never executed
branch 110 never executed
branch 111 never executed
call   112 never executed
call   113 never executed
branch 114 never executed
branch 115 never executed
call   116 never executed
call   117 never executed
branch 118 never executed
branch 119 never executed
call   120 never executed
call   121 never executed
branch 122 never executed
branch 123 never executed
call   124 never executed
call   125 never executed
branch 126 never executed
branch 127 never executed
call   128 never executed
call   129 never executed
branch 130 never executed
branch 131 never executed
call   132 never executed
call   133 never executed
branch 134 never executed
branch 135 never executed
call   136 never executed
call   137 never executed
branch 138 never executed
branch 139 never executed
call   140 never executed
call   141 never executed
branch 142 never executed
branch 143 never executed
call   144 never executed
call   145 never executed
branch 146 never executed
branch 147 never executed
call   148 never executed
call   149 never executed
branch 150 never executed
branch 151 never executed
call   152 never executed
call   153 never executed
branch 154 never executed
branch 155 never executed
call   156 never executed
call   157 never executed
branch 158 never executed
branch 159 never executed
    #####: 1505:	  __throw_length_error(__N(__s));
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
        -: 1506:
    #####: 1507:	const size_type __len = size() + std::max(size(), __n);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
call   42 never executed
call   43 never executed
call   44 never executed
call   45 never executed
call   46 never executed
call   47 never executed
call   48 never executed
call   49 never executed
call   50 never executed
call   51 never executed
call   52 never executed
call   53 never executed
call   54 never executed
call   55 never executed
call   56 never executed
call   57 never executed
call   58 never executed
call   59 never executed
call   60 never executed
call   61 never executed
call   62 never executed
call   63 never executed
call   64 never executed
call   65 never executed
call   66 never executed
call   67 never executed
call   68 never executed
call   69 never executed
call   70 never executed
call   71 never executed
call   72 never executed
call   73 never executed
call   74 never executed
call   75 never executed
call   76 never executed
call   77 never executed
call   78 never executed
call   79 never executed
call   80 never executed
call   81 never executed
call   82 never executed
call   83 never executed
call   84 never executed
call   85 never executed
call   86 never executed
call   87 never executed
call   88 never executed
call   89 never executed
call   90 never executed
call   91 never executed
call   92 never executed
call   93 never executed
call   94 never executed
call   95 never executed
call   96 never executed
call   97 never executed
call   98 never executed
call   99 never executed
call   100 never executed
call   101 never executed
call   102 never executed
call   103 never executed
call   104 never executed
call   105 never executed
call   106 never executed
call   107 never executed
call   108 never executed
call   109 never executed
call   110 never executed
call   111 never executed
call   112 never executed
call   113 never executed
call   114 never executed
call   115 never executed
call   116 never executed
call   117 never executed
call   118 never executed
call   119 never executed
    #####: 1508:	return (__len < size() || __len > max_size()) ? max_size() : __len;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
branch 18 never executed
branch 19 never executed
call   20 never executed
call   21 never executed
branch 22 never executed
branch 23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
call   27 never executed
call   28 never executed
branch 29 never executed
branch 30 never executed
call   31 never executed
branch 32 never executed
branch 33 never executed
call   34 never executed
call   35 never executed
branch 36 never executed
branch 37 never executed
call   38 never executed
branch 39 never executed
branch 40 never executed
call   41 never executed
call   42 never executed
branch 43 never executed
branch 44 never executed
call   45 never executed
branch 46 never executed
branch 47 never executed
call   48 never executed
call   49 never executed
branch 50 never executed
branch 51 never executed
call   52 never executed
branch 53 never executed
branch 54 never executed
call   55 never executed
call   56 never executed
branch 57 never executed
branch 58 never executed
call   59 never executed
branch 60 never executed
branch 61 never executed
call   62 never executed
call   63 never executed
branch 64 never executed
branch 65 never executed
call   66 never executed
branch 67 never executed
branch 68 never executed
call   69 never executed
call   70 never executed
branch 71 never executed
branch 72 never executed
call   73 never executed
branch 74 never executed
branch 75 never executed
call   76 never executed
call   77 never executed
branch 78 never executed
branch 79 never executed
call   80 never executed
branch 81 never executed
branch 82 never executed
call   83 never executed
call   84 never executed
branch 85 never executed
branch 86 never executed
call   87 never executed
branch 88 never executed
branch 89 never executed
call   90 never executed
call   91 never executed
branch 92 never executed
branch 93 never executed
call   94 never executed
branch 95 never executed
branch 96 never executed
call   97 never executed
call   98 never executed
branch 99 never executed
branch 100 never executed
call   101 never executed
branch 102 never executed
branch 103 never executed
call   104 never executed
call   105 never executed
branch 106 never executed
branch 107 never executed
call   108 never executed
branch 109 never executed
branch 110 never executed
call   111 never executed
call   112 never executed
branch 113 never executed
branch 114 never executed
call   115 never executed
branch 116 never executed
branch 117 never executed
call   118 never executed
call   119 never executed
branch 120 never executed
branch 121 never executed
call   122 never executed
branch 123 never executed
branch 124 never executed
call   125 never executed
call   126 never executed
branch 127 never executed
branch 128 never executed
call   129 never executed
branch 130 never executed
branch 131 never executed
call   132 never executed
call   133 never executed
branch 134 never executed
branch 135 never executed
call   136 never executed
branch 137 never executed
branch 138 never executed
call   139 never executed
call   140 never executed
branch 141 never executed
branch 142 never executed
call   143 never executed
branch 144 never executed
branch 145 never executed
call   146 never executed
call   147 never executed
branch 148 never executed
branch 149 never executed
call   150 never executed
branch 151 never executed
branch 152 never executed
call   153 never executed
call   154 never executed
branch 155 never executed
branch 156 never executed
call   157 never executed
branch 158 never executed
branch 159 never executed
call   160 never executed
call   161 never executed
branch 162 never executed
branch 163 never executed
call   164 never executed
branch 165 never executed
branch 166 never executed
call   167 never executed
call   168 never executed
branch 169 never executed
branch 170 never executed
call   171 never executed
branch 172 never executed
branch 173 never executed
call   174 never executed
call   175 never executed
branch 176 never executed
branch 177 never executed
call   178 never executed
branch 179 never executed
branch 180 never executed
call   181 never executed
call   182 never executed
branch 183 never executed
branch 184 never executed
call   185 never executed
branch 186 never executed
branch 187 never executed
call   188 never executed
call   189 never executed
branch 190 never executed
branch 191 never executed
call   192 never executed
branch 193 never executed
branch 194 never executed
call   195 never executed
call   196 never executed
branch 197 never executed
branch 198 never executed
call   199 never executed
branch 200 never executed
branch 201 never executed
call   202 never executed
call   203 never executed
branch 204 never executed
branch 205 never executed
call   206 never executed
branch 207 never executed
branch 208 never executed
call   209 never executed
call   210 never executed
branch 211 never executed
branch 212 never executed
call   213 never executed
branch 214 never executed
branch 215 never executed
call   216 never executed
call   217 never executed
branch 218 never executed
branch 219 never executed
call   220 never executed
branch 221 never executed
branch 222 never executed
call   223 never executed
call   224 never executed
branch 225 never executed
branch 226 never executed
call   227 never executed
branch 228 never executed
branch 229 never executed
call   230 never executed
call   231 never executed
branch 232 never executed
branch 233 never executed
call   234 never executed
branch 235 never executed
branch 236 never executed
call   237 never executed
call   238 never executed
branch 239 never executed
branch 240 never executed
call   241 never executed
branch 242 never executed
branch 243 never executed
call   244 never executed
call   245 never executed
branch 246 never executed
branch 247 never executed
call   248 never executed
branch 249 never executed
branch 250 never executed
call   251 never executed
call   252 never executed
branch 253 never executed
branch 254 never executed
call   255 never executed
branch 256 never executed
branch 257 never executed
call   258 never executed
call   259 never executed
branch 260 never executed
branch 261 never executed
call   262 never executed
branch 263 never executed
branch 264 never executed
call   265 never executed
call   266 never executed
branch 267 never executed
branch 268 never executed
call   269 never executed
branch 270 never executed
branch 271 never executed
call   272 never executed
call   273 never executed
branch 274 never executed
branch 275 never executed
call   276 never executed
branch 277 never executed
branch 278 never executed
call   279 never executed
        -: 1509:      }
        -: 1510:
        -: 1511:      // Internal erase functions follow.
        -: 1512:
        -: 1513:      // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
        -: 1514:      // _M_assign_aux.
        -: 1515:      void
function _ZNSt6vectorIcSaIcEE15_M_erase_at_endEPc called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE15_M_erase_at_endEPSG_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE15_M_erase_at_endEPSC_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3ArgESaIS3_EE15_M_erase_at_endEPS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3OptESaIS3_EE15_M_erase_at_endEPS3_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorImSaImEE15_M_erase_at_endEPm called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endEPS5_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch14SectionEndInfoESaIS1_EE15_M_erase_at_endEPS1_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch11MessageInfoESaIS1_EE15_M_erase_at_endEPS1_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch13ScopedMessageESaIS1_EE15_M_erase_at_endEPS1_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch16TestCaseTracking8ITrackerEESaIS4_EE15_M_erase_at_endEPS4_ called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail5TokenESaIS3_EE15_M_erase_at_endEPS3_ called 0 returned 0% blocks executed 0%
    #####: 1516:      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
        -: 1517:      {
    #####: 1518:	std::_Destroy(__pos, this->_M_impl._M_finish, _M_get_Tp_allocator());
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
    #####: 1519:	this->_M_impl._M_finish = __pos;
    #####: 1520:      }
        -: 1521:
        -: 1522:      iterator
        -: 1523:      _M_erase(iterator __position);
        -: 1524:
        -: 1525:      iterator
        -: 1526:      _M_erase(iterator __first, iterator __last);
        -: 1527:
        -: 1528:#if __cplusplus >= 201103L
        -: 1529:    private:
        -: 1530:      // Constant-time move assignment when source object's memory can be
        -: 1531:      // moved, either because the source's allocator will move too
        -: 1532:      // or because the allocators are equal.
        -: 1533:      void
function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_move_assignEOSE_St17integral_constantIbLb1EE called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIPKN5Catch8TestCaseESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE called 0 returned 0% blocks executed 0%
function _ZNSt6vectorISt10shared_ptrIN5Catch8TestSpec7PatternEESaIS4_EE14_M_move_assignEOS6_St17integral_constantIbLb1EE called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestCaseESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE called 0 returned 0% blocks executed 0%
function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3ArgESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch5clara6detail3OptESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec11FilterMatchESaIS2_EE14_M_move_assignEOS4_St17integral_constantIbLb1EE called 0 returned 0% blocks executed 0%
function _ZNSt6vectorIN5Catch8TestSpec6FilterESaIS2_EE14_M_move_assignEOS4_St17integral_constantIbLb1EE called 0 returned 0% blocks executed 0%
    #####: 1534:      _M_move_assign(vector&& __x, std::true_type) noexcept
        -: 1535:      {
    #####: 1536:	vector __tmp(get_allocator());
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
    #####: 1537:	this->_M_impl._M_swap_data(__tmp._M_impl);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
    #####: 1538:	this->_M_impl._M_swap_data(__x._M_impl);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
    #####: 1539:	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
    #####: 1540:      }
        -: 1541:
        -: 1542:      // Do move assignment when it might not be possible to move source
        -: 1543:      // object's memory, resulting in a linear-time operation.
        -: 1544:      void
        -: 1545:      _M_move_assign(vector&& __x, std::false_type)
        -: 1546:      {
        -: 1547:	if (__x._M_get_Tp_allocator() == this->_M_get_Tp_allocator())
        -: 1548:	  _M_move_assign(std::move(__x), std::true_type());
        -: 1549:	else
        -: 1550:	  {
        -: 1551:	    // The rvalue's allocator cannot be moved and is not equal,
        -: 1552:	    // so we need to individually move each element.
        -: 1553:	    this->assign(std::__make_move_if_noexcept_iterator(__x.begin()),
        -: 1554:			 std::__make_move_if_noexcept_iterator(__x.end()));
        -: 1555:	    __x.clear();
        -: 1556:	  }
        -: 1557:      }
        -: 1558:#endif
        -: 1559:
        -: 1560:      template<typename _Up>
        -: 1561:	_Up*
function _ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_ called 0 returned 0% blocks executed 0%
    #####: 1562:	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    #####: 1563:	{ return __ptr; }
        -: 1564:
        -: 1565:#if __cplusplus >= 201103L
        -: 1566:      template<typename _Ptr>
        -: 1567:	typename std::pointer_traits<_Ptr>::element_type*
        -: 1568:	_M_data_ptr(_Ptr __ptr) const
        -: 1569:	{ return empty() ? nullptr : std::__addressof(*__ptr); }
        -: 1570:#else
        -: 1571:      template<typename _Up>
        -: 1572:	_Up*
        -: 1573:	_M_data_ptr(_Up* __ptr) _GLIBCXX_NOEXCEPT
        -: 1574:	{ return __ptr; }
        -: 1575:
        -: 1576:      template<typename _Ptr>
        -: 1577:	value_type*
        -: 1578:	_M_data_ptr(_Ptr __ptr)
        -: 1579:	{ return __ptr.operator->(); }
        -: 1580:
        -: 1581:      template<typename _Ptr>
        -: 1582:	const value_type*
        -: 1583:	_M_data_ptr(_Ptr __ptr) const
        -: 1584:	{ return __ptr.operator->(); }
        -: 1585:#endif
        -: 1586:    };
        -: 1587:
        -: 1588:
        -: 1589:  /**
        -: 1590:   *  @brief  Vector equality comparison.
        -: 1591:   *  @param  __x  A %vector.
        -: 1592:   *  @param  __y  A %vector of the same type as @a __x.
        -: 1593:   *  @return  True iff the size and elements of the vectors are equal.
        -: 1594:   *
        -: 1595:   *  This is an equivalence relation.  It is linear in the size of the
        -: 1596:   *  vectors.  Vectors are considered equivalent if their sizes are equal,
        -: 1597:   *  and if corresponding elements compare equal.
        -: 1598:  */
        -: 1599:  template<typename _Tp, typename _Alloc>
        -: 1600:    inline bool
function _ZSteqIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EEbRKSt6vectorIT_T0_ESB_ called 0 returned 0% blocks executed 0%
    #####: 1601:    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
    #####: 1602:    { return (__x.size() == __y.size()
call    0 never executed
call    1 never executed
    #####: 1603:	      && std::equal(__x.begin(), __x.end(), __y.begin())); }
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
        -: 1604:
        -: 1605:  /**
        -: 1606:   *  @brief  Vector ordering relation.
        -: 1607:   *  @param  __x  A %vector.
        -: 1608:   *  @param  __y  A %vector of the same type as @a __x.
        -: 1609:   *  @return  True iff @a __x is lexicographically less than @a __y.
        -: 1610:   *
        -: 1611:   *  This is a total ordering relation.  It is linear in the size of the
        -: 1612:   *  vectors.  The elements must be comparable with @c <.
        -: 1613:   *
        -: 1614:   *  See std::lexicographical_compare() for how the determination is made.
        -: 1615:  */
        -: 1616:  template<typename _Tp, typename _Alloc>
        -: 1617:    inline bool
        -: 1618:    operator<(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
        -: 1619:    { return std::lexicographical_compare(__x.begin(), __x.end(),
        -: 1620:					  __y.begin(), __y.end()); }
        -: 1621:
        -: 1622:  /// Based on operator==
        -: 1623:  template<typename _Tp, typename _Alloc>
        -: 1624:    inline bool
function _ZStneIN5Catch5clara8TextFlow6Column8iteratorESaIS4_EEbRKSt6vectorIT_T0_ESB_ called 0 returned 0% blocks executed 0%
    #####: 1625:    operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
    #####: 1626:    { return !(__x == __y); }
call    0 never executed
        -: 1627:
        -: 1628:  /// Based on operator<
        -: 1629:  template<typename _Tp, typename _Alloc>
        -: 1630:    inline bool
        -: 1631:    operator>(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
        -: 1632:    { return __y < __x; }
        -: 1633:
        -: 1634:  /// Based on operator<
        -: 1635:  template<typename _Tp, typename _Alloc>
        -: 1636:    inline bool
        -: 1637:    operator<=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
        -: 1638:    { return !(__y < __x); }
        -: 1639:
        -: 1640:  /// Based on operator<
        -: 1641:  template<typename _Tp, typename _Alloc>
        -: 1642:    inline bool
        -: 1643:    operator>=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
        -: 1644:    { return !(__x < __y); }
        -: 1645:
        -: 1646:  /// See std::vector::swap().
        -: 1647:  template<typename _Tp, typename _Alloc>
        -: 1648:    inline void
        -: 1649:    swap(vector<_Tp, _Alloc>& __x, vector<_Tp, _Alloc>& __y)
        -: 1650:    _GLIBCXX_NOEXCEPT_IF(noexcept(__x.swap(__y)))
        -: 1651:    { __x.swap(__y); }
        -: 1652:
        -: 1653:_GLIBCXX_END_NAMESPACE_CONTAINER
        -: 1654:} // namespace std
        -: 1655:
        -: 1656:#endif /* _STL_VECTOR_H */
